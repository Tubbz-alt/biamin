+ VERSION=1.9
+ WEBURL=http://sigg3.net/biamin/
+ REPO=https://gitorious.org/back-in-a-minute/code
+ GAMEDIR=/home/sigg3/.biamin
+ CONFIG=/home/sigg3/.biamin/config
+ HIGHSCORE=/home/sigg3/.biamin/highscore
+ unset HISTFILE
+ START_LOCATION=C2
+ DISABLE_CHEATS=0
+ HR='- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MAX_BBSMSG=12
+ declare -r YEAR_LENGHT=360
+ declare -r YEAR_MONTHES=12
+ declare -r MONTH_LENGTH=30
+ declare -r MOON_PHASE_LENGTH=4
+ declare -r MOON_CYCLE=32
+ MOON_STR=("New Moon" "Growing Crescent" "First Quarter" "Growing Gibbous" "Full Moon" "Waning Gibbous" "Third Quarter" "Waning Crescent")
+ declare -r MOON_STR
+ MONTH_STR=("Biamin Festival" "Rarely happens, if ever :(" "After-Frost" "1st Month of the Year\n This is the coldest and darkest month of the year. Stay in, stay warm." "Marrsuckur" "2nd Month of the Year\n \"Marrow-sucker\" is a lean month. Some nobles have a custom of fasting." "Plough-Tide" "3rd Month of the Year\n Farmers return to their ploughs. Hobbit villages celebrate Springtide." "Anorlukis" "4th Month of the Year\n The winter darkness is overwon by Anor's arrows. Holy month for Elves." "Summer-Tide" "5th Month of the Year\n Middle of year. While the heat is welcoming, watch out for orcs and goblins!" "Summer-Turn" "6th Month of the Year\n A celebration of the Turn of Anor, in which one gives thanks for any good." "Merentimes" "7th Month of the Year\n From 'Meren' (happiness). This warm month is oft celebrated by travellers." "Harvest Month" "8th Month of the Year\n Autumn is the busiest time of year. And evil grows in the wilderness." "Ringorin" "9th Month of the Year\n From 'Ringorn' (circle, life, produce). Holy month for farmers." "Brew-Tasting Tide" "10th Month of the Year\n Traditional tasting of ales begin this month. Don't venture about alone." "Winter Month" "11th Month of the Year\n By now the stocks are full of produce. Livestock & people shelter in." "Midwinter Offering" "12th Month of the Year\n The Offering is a significant and holy event for priests and people alike.")
+ declare -r -a MONTH_STR
+ declare -r WEEK_LENGTH=7
+ WEEKDAY_STR=("Ringday (Holiday)" "Day of Festivities and Rest" "Men and Halflings celebrate Ringday as the end and beginning of the week." "Moonday" "Mor's Day (Day of the Moon)" "Elves and Dwarves once celebrated Moon Day as the holiest. Some still do." "Brenday" "Brenia's Day (God of Courage)" "Visit the Temple on Brenia's Day to honor those who perished in warfare." "Midweek" "Middle of the Week (Day of Balance)" "In some places, Midweek Eve is celebrated with village dances and ale." "Braigday" "Braig's Day (God of Wilderness)" "Historically, a day of hunting. Nobility still hunt every Braig's Day." "Melethday" "Melethril's Day (God of Love)" "Commonly considered Lovers' Day, it is also a day of mischief and trickery." "Washday" "Final Workday of the Week" "Folk name for Lanthir's Day, the God of Water, Springs and Waterfalls.")
+ declare -r -a WEEKDAY_STR
+ CALENDAR=()
+ declare -r DEATH_FIGHT=0
+ declare -r DEATH_STARVATION=1
+ declare -r BANDIT=0
+ declare -r IMP=1
+ declare -r GOBLIN=2
+ declare -r BOAR=3
+ declare -r ORC=4
+ declare -r VARG=5
+ declare -r MAGE=6
+ declare -r DRAGON=7
+ declare -r CHTHULU=8
+ declare -r BEAR=9
+ ENEMIES=("bandit  1        4        7     30    18             20 20   10        0   15" "imp     2        3        3     20    10             10  5    0        0   10" "goblin  3        3        5     30    15             30 10   20        0   20" "boar    4        2        3     60    35             40  0    0      100    0" "orc     4        4        4     80    40             50 15   25        0   35" "varg    4        3        3     80    60            100  0    0       70    0" "mage    5        3        4     90    45            150 50   60        0  100" "dragon  5        3        2    150    50            180 30    0       30  100" "chthulu 6        5        1    500    35           1000  0    0       90   40" "bear    6        2        4    160    25             60  0    0      100    0")
+ declare -ra ENEMIES
+ declare -r GIFT_OF_SIGHT=0
+ declare -r EMERALD_OF_NARCOLEPSY=1
+ declare -r GUARDIAN_ANGEL=2
+ declare -r FAST_MAGIC_BOOTS=3
+ declare -r QUICK_RABBIT_REACTION=4
+ declare -r FLASK_OF_TERRIBLE_ODOUR=5
+ declare -r TWO_HANDED_BROADSWORD=6
+ declare -r STEADY_HAND_BREW=7
+ declare -r MAX_ITEMS=8
+ DICE_GAME_CHANCES=(0 1 3 6 9 12 14 17 14 12 9 6 3)
+ declare -r -a DICE_GAME_CHANCES
+ DICE_GAME_WINNINGS=(0 1 100 85 70 55 40 25 40 55 70 85 100)
+ declare -r -a DICE_GAME_WINNINGS
+ RACES=("Race   Healing Strength Accuracy Flee Offset_Gold Offset_Tobacco" "human  3       3        3        3    12           8" "elf    4       3        4        1     8          12" "dwarf  2       5        3        2    14           6" "hobbit 4       1        4        3     6          14")
+ declare -r -a RACES
+ declare -r MAX_RACES=4
+ declare -r INITIAL_VALUE_GOLD=1
+ declare -r INITIAL_VALUE_TOBACCO=1
+ declare -r INITIAL_VALUE_CHANGE=0.15
+ [[ ! -d /home/sigg3/.biamin ]]
+ [[ ! -f /home/sigg3/.biamin/config ]]
+ [[ -f /home/sigg3/.biamin/highscore ]]
+ grep -q d41d8cd98f00b204e9800998ecf8427e /home/sigg3/.biamin/highscore
+ [[ ! -n '' ]]
+ for PAGER in less more
++ which less
+ PAGER=/usr/bin/less
+ [[ -n /usr/bin/less ]]
+ break
+ CLI_ParseArguments p
+ [[ ! -n p ]]
+ [[ -n p ]]
+ case "$1" in
+ [[ -n '' ]]
+ echo 'Launching Back in a Minute..'
+ shift
+ [[ -n '' ]]
+ echo 'Putting on the traveller'\''s boots..'
+ read -r GAMEDIR COLOR
++ awk '{ if (/^GAMEDIR:/)  { GAMEDIR= $2 }
                                   if (/^COLOR:/)    { COLOR = $2  } }
                            END { print GAMEDIR, COLOR ;}' /home/sigg3/.biamin/config
+ CheckBiaminDependencies
+ declare -a CRITICAL NONCRITICAL
+ local PROGRAM
+ echo 'Checking dependencies...'
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled tput
++ which tput
+ [[ -n /usr/bin/tput ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled awk
++ which awk
+ [[ -n /usr/bin/awk ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled bc
++ which bc
+ [[ -n /usr/bin/bc ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled sed
++ which sed
+ [[ -n /usr/bin/sed ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled printf
++ which printf
+ [[ -n /usr/bin/printf ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled date
++ which date
+ [[ -n /usr/bin/date ]]
+ return 0
+ for PROGRAM in '"curl"' '"wget"'
+ IsInstalled curl
++ which curl
+ [[ -n /usr/bin/curl ]]
+ return 0
+ for PROGRAM in '"curl"' '"wget"'
+ IsInstalled wget
++ which wget
+ [[ -n /usr/bin/wget ]]
+ return 0
+ [[ -n '' ]]
+ [[ -n '' ]]
++ tput cols
++ tput lines
+ ((  80 > 79 && 24 > 23 ))
+ unset CRITICAL NONCRITICAL PROGRAM
+ ColorConfig 1
+ case "$1" in
+ echo 'Enabling color for maps!'
+ (( COLOR == 1 ))
+ declare -gr 'YELLOW=\033[1;33m'
+ declare -gr 'RESET=\033[0;39m'
+ declare -gr 'CLEAR_LINE=\e[1K\e[80D'
+ ReseedRandom
+ [[ -n '' ]]
+ case "$OSTYPE" in
++ date +%N
+ RANDOM=357745423
+ trap CleanUp SIGHUP SIGINT SIGTERM
+ tput civis
+ [[ -n '' ]]
+ MainMenu
+ [[ ! -n '' ]]
+ GX_Banner
+ GX_BiaminTitle
+ clear
+ cat
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(P)lay;(L)oad game;(H)ighscore;(C)redits;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo l
+ LoadGame
+ local SHEETS FILES i=0 LIMIT=9 OFFSET=0 NUM=0 a
++ find /home/sigg3/.biamin/ -name '*.sheet'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/onico.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/onico.sheet
+ SHEETS[$i]='"Onico" the Human (56 HP, 45 EXP, 0 items, sector B8)'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/irc.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/irc.sheet
+ SHEETS[$i]='"irc" the Human (5 HP, 110 EXP, 1 items, sector E5)'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/elvis.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/elvis.sheet
+ SHEETS[$i]='"Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5)'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/debugme.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/debugme.sheet
+ SHEETS[$i]='"Debugme" the Human (100 HP, 0 EXP, 0 items, sector E5)'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/ho.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/ho.sheet
+ SHEETS[$i]='"Ho" the Dwarf (100 HP, 0 EXP, 0 items, sector E5)'
+ GX_LoadGame
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ [[ ! -n "Onico" the Human (56 HP, 45 EXP, 0 items, sector B8) "irc" the Human (5 HP, 110 EXP, 1 items, sector E5) "Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5) "Debugme" the Human (100 HP, 0 EXP, 0 items, sector E5) "Ho" the Dwarf (100 HP, 0 EXP, 0 items, sector E5) ]]
+ true
+ tput rc
+ tput ed
+ (( a=1 ))
+ (( a <= LIMIT  ))
+ [[ -n "Onico" the Human (56 HP, 45 EXP, 0 items, sector B8) ]]
+ echo '1. "Onico" the Human (56 HP, 45 EXP, 0 items, sector B8)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n "irc" the Human (5 HP, 110 EXP, 1 items, sector E5) ]]
+ echo '2. "irc" the Human (5 HP, 110 EXP, 1 items, sector E5)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n "Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5) ]]
+ echo '3. "Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n "Debugme" the Human (100 HP, 0 EXP, 0 items, sector E5) ]]
+ echo '4. "Debugme" the Human (100 HP, 0 EXP, 0 items, sector E5)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n "Ho" the Dwarf (100 HP, 0 EXP, 0 items, sector E5) ]]
+ echo '5. "Ho" the Dwarf (100 HP, 0 EXP, 0 items, sector E5)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n '' ]]
+ break
+ ((  i > LIMIT ))
+ echo -en '\n Enter NUMBER of character to load or any letter to return to (M)ain Menu: '
+ read -sn 1 NUM
+ case "$NUM" in
+ NUM=4
+ break
+ echo ''
+ [[ ! -n "Debugme" the Human (100 HP, 0 EXP, 0 items, sector E5) ]]
++ awk '{if (/^CHARACTER:/) { RLENGTH = match($0,/: /); print substr($0, RLENGTH+2);}}' /home/sigg3/.biamin/debugme.sheet
+ CHAR=Debugme
+ [[ ! -n Debugme ]]
+ BiaminSetup
+ BiaminSetup_MakeBaseChar
+ CHAR_BATTLES=0
+ CHAR_EXP=0
+ CHAR_GPS=C2
+ CHAR_HEALTH=100
+ CHAR_ITEMS=0
+ CHAR_KILLS=0
+ CHAR_HOME=C2
++ bc
+++ RollDice2 11
+++ RollDice 11
+++ DICE_SIZE=11
+++ DICE=4
+++ echo 4
+ CHAR_FOOD=8
+ BBSMSG=0
+ VAL_GOLD=1
+ VAL_TOBACCO=1
+ VAL_CHANGE=0.15
+ STARVATION=0
++ TurnFromDate
++ local YEAR MONTH DAY
++ read -r YEAR MONTH DAY
+++ date '+%-y %-m %-d'
++ bc
+ TURN=5475
+ INV_ALMANAC=0
++ echo Debugme
++ tr '[:upper:]' '[:lower:]'
++ tr -d ' '
+ CHARSHEET=/home/sigg3/.biamin/debugme.sheet
+ [[ -f /home/sigg3/.biamin/debugme.sheet ]]
+ BiaminSetup_LoadCharsheet
+ echo -en ' Welcome back, Debugme!\n Loading character sheet ...'
+ BiaminSetup_UpdateOldSaves /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^HOME:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^BBSMSG:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^STARVATION:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^TURN:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^INV_ALMANAC:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^GOLD:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^TOBACCO:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^FOOD:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^VAL_GOLD:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^VAL_TOBACCO:' /home/sigg3/.biamin/debugme.sheet
+ grep -Eq '^VAL_CHANGE:' /home/sigg3/.biamin/debugme.sheet
++ awk '
                  {
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /);
                  	                 CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { RACE= $2 }
                   if (/^BATTLES:/)    { BATTLES = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^KILLS:/)      { KILLS = $2 }
                   if (/^HOME:/)       { HOME = $2 }
                   if (/^GOLD:/)       { GOLD = $2 }
                   if (/^TOBACCO:/)    { TOBACCO = $2 }
                   if (/^FOOD:/)       { FOOD = $2 }
                   if (/^BBSMSG:/)     { BBSMSG = $2 }
                   if (/^VAL_GOLD:/)   { VAL_GOLD = $2 }
                   if (/^VAL_TOBACCO:/){ VAL_TOBACCO = $2 }
                   if (/^VAL_CHANGE:/) { VAL_CHANGE = $2 }
                   if (/^STARVATION:/) { STARVATION = $2 }
                   if (/^TURN:/)        { TURN= $2 }
                   if (/^INV_ALMANAC:/) { INV_ALMANAC = $2 }
                  }
                 END {
                 print CHARACTER ";" RACE ";" BATTLES ";" EXPERIENCE ";" LOCATION ";" HEALTH ";" ITEMS ";" KILLS ";" HOME ";" GOLD ";" TOBACCO ";" FOOD ";" BBSMSG ";" VAL_GOLD ";" VAL_TOBACCO ";" VAL_CHANGE ";" STARVATION ";" TURN ";" INV_ALMANAC ";"
                 }' /home/sigg3/.biamin/debugme.sheet
+ local 'CHAR_TMP=Debugme;1;0;0;E5;100;0;0;C2;1;2;4.25;7;1;1;0.15;0;5482;0;'
+ IFS=';'
+ read -r CHAR CHAR_RACE CHAR_BATTLES CHAR_EXP CHAR_GPS CHAR_HEALTH CHAR_ITEMS CHAR_KILLS CHAR_HOME CHAR_GOLD CHAR_TOBACCO CHAR_FOOD BBSMSG VAL_GOLD VAL_TOBACCO VAL_CHANGE STARVATION TURN INV_ALMANAC
+ ((  CHAR_HEALTH <= 0  ))
+ BiaminSetup_SetRaceAbilities 1
+ read -r CHAR_RACE_STR HEALING STRENGTH ACCURACY FLEE OFFSET_GOLD OFFSET_TOBACCO
+ BiaminSetup_SetItemsAbilities 0
+ HaveItem 1
+ ((  0 > 1  ))
+ return 1
+ HaveItem 3
+ ((  0 > 3  ))
+ return 1
+ HaveItem 6
+ ((  0 > 6  ))
+ return 1
+ HaveItem 7
+ ((  0 > 7  ))
+ return 1
+ Sleep 2
+ read -s -n 1 -t 2
+ (( DISABLE_CHEATS == 1 && CHAR_HEALTH >= 150 ))
+ Intro
+ MapCreate
+ MAPS=($(find "$GAMEDIR"/ -name '*.map' | sort))
++ find /home/sigg3/.biamin/ -name '*.map'
++ sort
+ [[ -n /home/sigg3/.biamin/diffway.map /home/sigg3/.biamin/testing.map ]]
+ echo -en '\n Custom maps found in /home/sigg3/.biamin\n Would you like to play a (C)ustom map or the (D)efault? '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo d
+ [[ d == [Cc] ]]
++ cat
+ MAP='       A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R
   #=========================================================================#
 1 )   x   x   x   x   x   @   .   .   .   T   x   x   x   x   x   x   @   T (
 2 )   x   x   H   x   @   @   .   @   @   x   x   x   x   x   @   @   @   @ (
 3 )   @   @   .   @   @   @   .   x   x   x   x   x   @   x   @   x   @   @ (
 4 )   @   @   .   @   @   @   .   @   x   x   x   @   T   x   x   x   x   x (
 5 )   @   @   .   .   T   .   .   @   @   @   @   @   .   @   x   x   x   x (
 6 )   @   @   @   @   .   @   @   @   @   @   @   @   .   @   @   x   x   x (
 7 )   @   @   @   @   .   .   .   T   @   @   @   @   .   @   @   x   x   x (
 8 )   @   @   T   .   .   @   @   @   @   @   @   .   .   .   .   .   .   x (
 9 )   @   @   .   @   @   @   @   @   @   @   .   .   @   x   @   @   .   . (
10 )   @   @   .   @   @   @   T   @   @   @   .   @   @   x   x   x   x   . (
11 )   T   .   .   .   .   .   .   .   @   @   .   x   x   C   x   x   x   . (
12 )   x   @   @   @   .   @   @   .   .   .   .   x   x   x   x   x   x   . (
13 )   x   x   @   x   .   @   @   @   @   @   .   @   x   x   @   @   @   . (
14 )   x   x   x   x   .   @   @   @   @   T   .   @   x   x   @   @   .   . (
15 )   x   x   x   T   .   @   @   @   @   @   @   @   @   T   .   .   .   @ (
   #=========================================================================#
          LEGEND: x = Mountain, . = Road, T = Town, @ = Forest         N
                  H = Home (Heal Your Wounds) C = Oldburg Castle     W + E
                                                                       S'
+ HotzonesDistribute 0
+ local ITEMS_2_SCATTER=8
+ HOTZONE=()
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=4
+++ echo 4
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=11
+++ echo 11
++ XYtoGPS 4 11
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=D11
+ [[ D11 == \E\5 ]]
+ CheckHotzones D11
++ grep -E '(^| )D11( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=D11
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=8
+++ echo 8
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=6
+++ echo 6
++ XYtoGPS 8 6
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=H6
+ [[ H6 == \E\5 ]]
+ CheckHotzones H6
++ grep -E '(^| )H6( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=H6
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=13
+++ echo 13
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=5
+++ echo 5
++ XYtoGPS 13 5
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=M5
+ [[ M5 == \E\5 ]]
+ CheckHotzones M5
++ grep -E '(^| )M5( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=M5
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=4
+++ echo 4
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=6
+++ echo 6
++ XYtoGPS 4 6
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=D6
+ [[ D6 == \E\5 ]]
+ CheckHotzones D6
++ grep -E '(^| )D6( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=D6
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=16
+++ echo 16
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=10
+++ echo 10
++ XYtoGPS 16 10
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=P10
+ [[ P10 == \E\5 ]]
+ CheckHotzones P10
++ grep -E '(^| )P10( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=P10
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=18
+++ echo 18
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=11
+++ echo 11
++ XYtoGPS 18 11
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=R11
+ [[ R11 == \E\5 ]]
+ CheckHotzones R11
++ grep -E '(^| )R11( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=R11
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=15
+++ echo 15
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=13
+++ echo 13
++ XYtoGPS 15 13
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=O13
+ [[ O13 == \E\5 ]]
+ CheckHotzones O13
++ grep -E '(^| )O13( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=O13
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=18
+++ echo 18
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=4
+++ echo 4
++ XYtoGPS 18 4
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=R4
+ [[ R4 == \E\5 ]]
+ CheckHotzones R4
++ grep -E '(^| )R4( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=R4
+ (( ITEMS_2_SCATTER > 0  ))
+ WORLDCHANGE_COUNTDOWN=0
+ WorldPriceFixing
+ local VAL_FOOD=1
++ bc
+ PRICE_FxG=1.00
++ bc
+ PRICE_FxT=1.00
++ bc
+ PRICE_GxT=1.00
++ bc
+ PRICE_GxF=1.00
++ bc
+ PRICE_TxG=1.00
++ bc
+ PRICE_TxF=1.00
+ GX_Intro 60
+ clear
+ cat
+ local COUNTDOWN=60
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n '                         Press (A)ny key to continue..'
+ tput sc
+ (( COUNTDOWN-- ))
+ tput rc
+ (( COUNTDOWN % 2 ))
+ echo -n .
+ read -sn 1 -t 1
+ break
+ NODICE=1
+ NewSector
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=83
++ bc
+ MONTH=2
++ bc
+ DAY=23
++ bc
+ WEEKDAY=2
++ bc
+ MOON=2
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 24
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 24th
++ return 0
++ MonthString 3
++ echo Plough-Tide
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='24th of Plough-Tide in the 16th Cycle'
+ CheckForItem E5
+ ((  E5 < MAX_ITEMS  ))
+ CheckHotzones E5
++ grep -E '(^| )E5( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario E5
++ read -r MAP_X MAP_Y
+++ GPStoXY E5
+++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
++ awk '{ if ( NR == 7) { print $7; }}'
+ SCENARIO=T
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n 1 ]]
+ unset NODICE
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=4.00
+ Echo 'You eat from your stock: 4.00 remaining ..' '[-.25 FOOD]'
+ echo -en 'You eat from your stock: 4.00 remaining ..'
++ Strlen '[-.25 FOOD]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-.25 FOOD]'
+ echo
+ (( STARVATION ))
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=62
++ echo 62
+ ((  62 > 15  ))
+ return 0
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter    (R)est    (G)o into Town    (M)ap and Travel    (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo g
+ local ACTION=g
+ case "$ACTION" in
+ [[ T == \T ]]
+ GoIntoTown
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo b
+ GX_Bulletin 7
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_GOLD_STR=1.00
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_TOBACCO_STR=1.00
+ case $1 in
+ BULLETIN=("         GOLDE VEIN PROMISING       " "A new Vein of Gold discovered in ye " "Royal Gold Mines promises a Flood   " "of Golde to the Kingdom's Markets.  " "Dwarven Advisors to ye King Himself " "assure future Finds to be Great!    ")
+ local BULLETIN
+ case $1 in
+ BULLETIN[6]='GOLD LOWERED TO: 1.00'
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ local NUM=0
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 3 21 '         GOLDE VEIN PROMISING       '
+ tput cup 3 21
+ printf %s '         GOLDE VEIN PROMISING       '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 5 21 'A new Vein of Gold discovered in ye '
+ tput cup 5 21
+ printf %s 'A new Vein of Gold discovered in ye '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 6 21 'Royal Gold Mines promises a Flood   '
+ tput cup 6 21
+ printf %s 'Royal Gold Mines promises a Flood   '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 7 21 'of Golde to the Kingdom'\''s Markets.  '
+ tput cup 7 21
+ printf %s 'of Golde to the Kingdom'\''s Markets.  '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 8 21 'Dwarven Advisors to ye King Himself '
+ tput cup 8 21
+ printf %s 'Dwarven Advisors to ye King Himself '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 9 21 'assure future Finds to be Great!    '
+ tput cup 9 21
+ printf %s 'assure future Finds to be Great!    '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 10 21 'GOLD LOWERED TO: 1.00'
+ tput cup 10 21
+ printf %s 'GOLD LOWERED TO: 1.00'
+ tput rc
+ PressAnyKey
+ [[ -n '' ]]
+ MakePrompt 'Press (A)ny key to continue..'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -s -t 0.01 -n 512
+ read -sn 1
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ Marketplace
+ '[' -z '' ']'
+ TOWN_GPS=E5
+ RollDice 10
+ DICE_SIZE=10
+ DICE=1
+ ((  DICE <= 4  ))
+ local BEGGAR=1
+ true
+ GX_Marketplace
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(G)rocer;(M)erchant;(L)eave;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo g
+ Marketplace_Grocer
++ bc
+ local GROCER_FxG=1.07
++ bc
+ local GROCER_FxT=1.07
+ true
+ GX_Marketplace_Grocer 1.07 1.07
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n 1.07 1.07 ]]
+ tput sc
+ [[ -n 1.07 ]]
+ MvAddStr 10 4 '1 FOOD costs 1.07 Gold'
+ tput cup 10 4
+ printf %s '1 FOOD costs 1.07 Gold'
+ [[ -n 1.07 ]]
+ MvAddStr 11 4 'or 1.07 Tobacco."'
+ tput cup 11 4
+ printf %s 'or 1.07 Tobacco."'
+ tput rc
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ MakePrompt 'Trade for (G)old;Trade for (T)obacco;(L)eave'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo l
+ break
+ true
+ GX_Marketplace
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(G)rocer;(M)erchant;(L)eave;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo n
+ break
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo n
+ break
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter    (R)est    (G)o into Town    (M)ap and Travel    (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo g
+ local ACTION=g
+ case "$ACTION" in
+ [[ T == \T ]]
+ GoIntoTown
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo n
+ break
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter    (R)est    (G)o into Town    (M)ap and Travel    (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo g
+ local ACTION=g
+ case "$ACTION" in
+ [[ T == \T ]]
+ GoIntoTown
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ Marketplace
+ '[' -z E5 ']'
+ '[' E5 '!=' E5 ']'
+ true
+ GX_Marketplace
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(G)rocer;(M)erchant;(L)eave;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ Marketplace_Merchant
+ '[' -z '' ']'
+ MERCHANT=E5
+ MERCHANT_FxG=1.00
+ MERCHANT_FxT=1.00
+ MERCHANT_GxT=1.00
+ MERCHANT_GxF=1.00
+ MERCHANT_TxG=1.00
+ MERCHANT_TxF=1.00
++ bc
+ PRICE_IxG=2.00
+ MERCHANT_IxG=2.00
++ bc
+ PRICE_GxI=2.00
+ MERCHANT_GxI=2.00
+ RollDice 3
+ DICE_SIZE=3
+ DICE=1
++ bc
+ local MERCHANT_MARGIN=.15
+ RollDice 3
+ DICE_SIZE=3
+ DICE=1
+ case "$DICE" in
++ bc
+ MERCHANT_FxG=1.15
++ bc
+ MERCHANT_GxF=.85
++ bc
+ MERCHANT_FxT=1.15
++ bc
+ MERCHANT_TxF=.85
++ bc
+ MERCHANT_FxG=1.00
++ bc
+ MERCHANT_FxG=1.00
++ bc
+ MERCHANT_FxG=1.00
++ bc
+ MERCHANT_FxG=1.00
++ bc
+ MERCHANT_FxG=2.00
++ bc
+ MERCHANT_FxG=2.00
+ RollDice 8
+ DICE_SIZE=8
+ DICE=7
+ case "$DICE" in
+ MERCHANT_ITEM=Almanac
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining f
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '2.00 Gold or 1.15 Tobacco.'
+ tput cup 7 4
+ printf %s '2.00 Gold or 1.15 Tobacco.'
+ MvAddStr 10 4 'for .85 Gold or .85 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for .85 Gold or .85 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Food
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '2.00 Gold or 1.15 Tobacco.'
+ tput cup 7 4
+ printf %s '2.00 Gold or 1.15 Tobacco.'
+ MvAddStr 10 4 'for .85 Gold or .85 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for .85 Gold or .85 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining f
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '2.00 Gold or 1.15 Tobacco.'
+ tput cup 7 4
+ printf %s '2.00 Gold or 1.15 Tobacco.'
+ MvAddStr 10 4 'for .85 Gold or .85 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for .85 Gold or .85 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Food
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '2.00 Gold or 1.15 Tobacco.'
+ tput cup 7 4
+ printf %s '2.00 Gold or 1.15 Tobacco.'
+ MvAddStr 10 4 'for .85 Gold or .85 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for .85 Gold or .85 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining g
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=gold
+ MvAddStr 7 4 '1.00 Tobacco or .85 Food.'
+ tput cup 7 4
+ printf %s '1.00 Tobacco or .85 Food.'
+ MvAddStr 10 4 'for 1.00 Tobacco or 2.00 Food each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Tobacco or 2.00 Food each!'
+ MERCHANDISE=Gold
+ [[ Gold = \I\t\e\m ]]
+ [[ Gold = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Gold to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Gold to you for'
+ MvAddStr 9 4 'Or I can buy 1 Gold from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Gold from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Gold
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=gold
+ MvAddStr 7 4 '1.00 Tobacco or .85 Food.'
+ tput cup 7 4
+ printf %s '1.00 Tobacco or .85 Food.'
+ MvAddStr 10 4 'for 1.00 Tobacco or 2.00 Food each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Tobacco or 2.00 Food each!'
+ MERCHANDISE=Gold
+ [[ Gold = \I\t\e\m ]]
+ [[ Gold = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Gold to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Gold to you for'
+ MvAddStr 9 4 'Or I can buy 1 Gold from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Gold from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining t
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=tobacco
+ MvAddStr 7 4 '1.00 Gold or .85 Food.'
+ tput cup 7 4
+ printf %s '1.00 Gold or .85 Food.'
+ MvAddStr 10 4 'for 1.00 Gold or 1.15 Food each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Gold or 1.15 Food each!'
+ MERCHANDISE=Tobacco
+ [[ Tobacco = \I\t\e\m ]]
+ [[ Tobacco = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Tobacco to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Tobacco to you for'
+ MvAddStr 9 4 'Or I can buy 1 Tobacco from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Tobacco from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Tobacco
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=tobacco
+ MvAddStr 7 4 '1.00 Gold or .85 Food.'
+ tput cup 7 4
+ printf %s '1.00 Gold or .85 Food.'
+ MvAddStr 10 4 'for 1.00 Gold or 1.15 Food each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Gold or 1.15 Food each!'
+ MERCHANDISE=Tobacco
+ [[ Tobacco = \I\t\e\m ]]
+ [[ Tobacco = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Tobacco to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Tobacco to you for'
+ MvAddStr 9 4 'Or I can buy 1 Tobacco from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Tobacco from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining i
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=item
+ MvAddStr 7 4 'yours for 2.00 Gold!'
+ tput cup 7 4
+ printf %s 'yours for 2.00 Gold!'
+ MERCHANDISE=Item
+ [[ Item = \I\t\e\m ]]
+ MvAddStr 4 4 'You are in for a treat! I managed to'
+ tput cup 4 4
+ printf %s 'You are in for a treat! I managed to'
+ MvAddStr 5 4 'acquire a very rare and valuable'
+ tput cup 5 4
+ printf %s 'acquire a very rare and valuable'
+ MvAddStr 6 4 'Almanac, it can be yours'
+ tput cup 6 4
+ printf %s 'Almanac, it can be yours'
+ MvAddStr 9 4 'I also buy any items you sell'
+ tput cup 9 4
+ printf %s 'I also buy any items you sell'
+ MvAddStr 10 4 'for 2.00 Gold a piece.'
+ tput cup 10 4
+ printf %s 'for 2.00 Gold a piece.'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Item
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=item
+ MvAddStr 7 4 'yours for 2.00 Gold!'
+ tput cup 7 4
+ printf %s 'yours for 2.00 Gold!'
+ MERCHANDISE=Item
+ [[ Item = \I\t\e\m ]]
+ MvAddStr 4 4 'You are in for a treat! I managed to'
+ tput cup 4 4
+ printf %s 'You are in for a treat! I managed to'
+ MvAddStr 5 4 'acquire a very rare and valuable'
+ tput cup 5 4
+ printf %s 'acquire a very rare and valuable'
+ MvAddStr 6 4 'Almanac, it can be yours'
+ tput cup 6 4
+ printf %s 'Almanac, it can be yours'
+ MvAddStr 9 4 'I also buy any items you sell'
+ tput cup 9 4
+ printf %s 'I also buy any items you sell'
+ MvAddStr 10 4 'for 2.00 Gold a piece.'
+ tput cup 10 4
+ printf %s 'for 2.00 Gold a piece.'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 1 Gold, 2 Tobacco and 4.00 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ break
+ true
+ GX_Marketplace
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(G)rocer;(M)erchant;(L)eave;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo l
+ break
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo b
+ GX_Bulletin 7
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_GOLD_STR=1.00
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_TOBACCO_STR=1.00
+ case $1 in
+ BULLETIN=("         GOLDE VEIN PROMISING       " "A new Vein of Gold discovered in ye " "Royal Gold Mines promises a Flood   " "of Golde to the Kingdom's Markets.  " "Dwarven Advisors to ye King Himself " "assure future Finds to be Great!    ")
+ local BULLETIN
+ case $1 in
+ BULLETIN[6]='GOLD LOWERED TO: 1.00'
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ local NUM=0
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 3 21 '         GOLDE VEIN PROMISING       '
+ tput cup 3 21
+ printf %s '         GOLDE VEIN PROMISING       '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 5 21 'A new Vein of Gold discovered in ye '
+ tput cup 5 21
+ printf %s 'A new Vein of Gold discovered in ye '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 6 21 'Royal Gold Mines promises a Flood   '
+ tput cup 6 21
+ printf %s 'Royal Gold Mines promises a Flood   '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 7 21 'of Golde to the Kingdom'\''s Markets.  '
+ tput cup 7 21
+ printf %s 'of Golde to the Kingdom'\''s Markets.  '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 8 21 'Dwarven Advisors to ye King Himself '
+ tput cup 8 21
+ printf %s 'Dwarven Advisors to ye King Himself '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 9 21 'assure future Finds to be Great!    '
+ tput cup 9 21
+ printf %s 'assure future Finds to be Great!    '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 10 21 'GOLD LOWERED TO: 1.00'
+ tput cup 10 21
+ printf %s 'GOLD LOWERED TO: 1.00'
+ tput rc
+ PressAnyKey
+ [[ -n '' ]]
+ MakePrompt 'Press (A)ny key to continue..'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -s -t 0.01 -n 512
+ read -sn 1
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo e
+ break
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter    (R)est    (G)o into Town    (M)ap and Travel    (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo q
+ local ACTION=q
+ case "$ACTION" in
+ CleanUp
+ GX_BiaminTitle
+ clear
+ cat
+ echo -e '\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ (( FIGHTMODE ))
+ [[ -n Debugme ]]
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: Debugme
RACE: 1
BATTLES: 0
EXPERIENCE: 0
LOCATION: E5
HEALTH: 100
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 1
TOBACCO: 2
FOOD: 4.00
BBSMSG: 7
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5483
INV_ALMANAC: 0'
+ echo -e '\nLeaving the realm of magic behind ....\nPlease submit bugs and feedback at <http://sigg3.net/biamin/>'
+ Exit 0
+ tput cnorm
+ [[ -n 0 ]]
+ exit 0
