+ VERSION=1.9
+ WEBURL=http://sigg3.net/biamin/
+ GAMEDIR=/home/sigg3/.biamin
+ CONFIG=/home/sigg3/.biamin/config
+ HIGHSCORE=/home/sigg3/.biamin/highscore
+ unset HISTFILE
+ START_LOCATION=C2
+ DISABLE_CHEATS=0
+ HR='- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MAX_BBSMSG=12
+ declare -r YEAR_LENGHT=360
+ declare -r YEAR_MONTHES=12
+ declare -r MONTH_LENGTH=30
+ declare -r MOON_PHASE_LENGTH=4
+ declare -r MOON_CYCLE=32
+ MOON_STR=("New Moon" "Growing Crescent" "First Quarter" "Growing Gibbous" "Full Moon" "Waning Gibbous" "Third Quarter" "Waning Crescent")
+ declare -r MOON_STR
+ MONTH_STR=("Biamin Festival" "Rarely happens, if ever :(" "After-Frost" "1st Month of the Year\n This is the coldest and darkest month of the year. Stay in, stay warm." "Marrsuckur" "2nd Month of the Year\n \"Marrow-sucker\" is a lean month. Some nobles have a custom of fasting." "Plough-Tide" "3rd Month of the Year\n Farmers return to their ploughs. Hobbit villages celebrate Springtide." "Anorlukis" "4th Month of the Year\n The winter darkness is overwon by Anor's arrows. Holy month for Elves." "Summer-Tide" "5th Month of the Year\n Middle of year. While the heat is welcoming, watch out for orcs and goblins!" "Summer-Turn" "6th Month of the Year\n A celebration of the Turn of Anor, in which one gives thanks for any good." "Merentimes" "7th Month of the Year\n From 'Meren' (happiness). This warm month is oft celebrated by travellers." "Harvest Month" "8th Month of the Year\n Autumn is the busiest time of year. And evil grows in the wilderness." "Ringorin" "9th Month of the Year\n From 'Ringorn' (circle, life, produce). Holy month for farmers." "Brew-Tasting Tide" "10th Month of the Year\n Traditional tasting of ales begin this month. Don't venture about alone." "Winter Month" "11th Month of the Year\n By now the stocks are full of produce. Livestock & people shelter in." "Midwinter Offering" "12th Month of the Year\n The Offering is a significant and holy event for priests and people alike.")
+ declare -r -a MONTH_STR
+ declare -r WEEK_LENGTH=7
+ WEEKDAY_STR=("Ringday (Holiday)" "Day of Festivities and Rest" "Men and Halflings celebrate Ringday as the end and beginning of the week." "Moonday" "Mor's Day (Day of the Moon)" "Elves and Dwarves once celebrated Moon Day as the holiest. Some still do." "Brenday" "Brenia's Day (God of Courage)" "Visit the Temple on Brenia's Day to honor those who perished in warfare." "Midweek" "Middle of the Week (Day of Balance)" "In some places, Midweek Eve is celebrated with village dances and ale." "Braigday" "Braig's Day (God of Wilderness)" "Historically, a day of hunting. Nobility still hunt every Braig's Day." "Melethday" "Melethril's Day (God of Love)" "Commonly considered Lovers' Day, it is also a day of mischief and trickery." "Washday" "Final Workday of the Week" "Folk name for Lanthir's Day, the God of Water, Springs and Waterfalls.")
+ declare -r -a WEEKDAY_STR
+ CALENDAR=()
+ declare -r DEATH_FIGHT=0
+ declare -r DEATH_STARVATION=1
+ declare -r GIFT_OF_SIGHT=0
+ declare -r EMERALD_OF_NARCOLEPSY=1
+ declare -r GUARDIAN_ANGEL=2
+ declare -r FAST_MAGIC_BOOTS=3
+ declare -r QUICK_RABBIT_REACTION=4
+ declare -r FLASK_OF_TERRIBLE_ODOUR=5
+ declare -r TWO_HANDED_BROADSWORD=6
+ declare -r STEADY_HAND_BREW=7
+ declare -r MAX_ITEMS=8
+ DICE_GAME_CHANCES=(0 1 3 6 9 12 14 17 14 12 9 6 3)
+ declare -r -a DICE_GAME_CHANCES
+ DICE_GAME_WINNINGS=(0 1 100 85 70 55 40 25 40 55 70 85 100)
+ declare -r -a DICE_GAME_WINNINGS
+ RACES=("Race   Healing Strength Accuracy Flee Offset_Gold Offset_Tobacco" "human  3       3        3        3    12           8" "elf    4       3        4        1     8          12" "dwarf  2       5        3        2    14           6" "hobbit 4       1        4        3     6          14")
+ declare -r -a RACES
+ declare -r MAX_RACES=4
+ declare -r INITIAL_VALUE_GOLD=1
+ declare -r INITIAL_VALUE_TOBACCO=1
+ declare -r INITIAL_VALUE_CHANGE=0.15
+ [[ ! -d /home/sigg3/.biamin ]]
+ [[ ! -f /home/sigg3/.biamin/config ]]
+ [[ -f /home/sigg3/.biamin/highscore ]]
+ grep -q d41d8cd98f00b204e9800998ecf8427e /home/sigg3/.biamin/highscore
+ [[ ! -n '' ]]
+ for PAGER in less more
++ which less
+ PAGER=/usr/bin/less
+ [[ -n /usr/bin/less ]]
+ break
+ ParseCLIarguments p
+ case "$1" in
+ shift
+ [[ -n '' ]]
+ echo 'Launching Back in a Minute..'
+ echo 'Putting on the traveller'\''s boots..'
+ read -r GAMEDIR COLOR
++ awk '{ if (/^GAMEDIR:/)  { GAMEDIR= $2 }
                                   if (/^COLOR:/)    { COLOR = $2  } }
                            END { print GAMEDIR, COLOR ;}' /home/sigg3/.biamin/config
+ ColorConfig 1
+ case "$1" in
+ echo 'Enabling color for maps!'
+ (( COLOR == 1 ))
+ YELLOW='\033[1;33m'
+ RESET='\033[0;39m'
+ CLEAR_LINE='\e[1K\e[80D'
+ ReseedRandom
+ [[ -n '' ]]
+ case "$OSTYPE" in
++ date +%N
+ RANDOM=054533808
+ trap CleanUp SIGHUP SIGINT SIGTERM
+ tput civis
+ [[ -n '' ]]
+ MainMenu
+ [[ ! -n '' ]]
+ GX_Banner
+ GX_BiaminTitle
+ clear
+ cat
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(P)lay;(L)oad game;(H)ighscore;(C)redits;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo l
+ LoadGame
+ local SHEETS FILES i=0 LIMIT=9 OFFSET=0 NUM=0 a
++ find /home/sigg3/.biamin/ -name '*.sheet'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/irc.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/irc.sheet
+ SHEETS[$i]='"irc" the Human (100 HP, 0 EXP, 1 items, sector C2)'
+ GX_LoadGame
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ [[ ! -n "irc" the Human (100 HP, 0 EXP, 1 items, sector C2) ]]
+ true
+ tput rc
+ tput ed
+ (( a=1 ))
+ (( a <= LIMIT  ))
+ [[ -n "irc" the Human (100 HP, 0 EXP, 1 items, sector C2) ]]
+ echo '1. "irc" the Human (100 HP, 0 EXP, 1 items, sector C2)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n '' ]]
+ break
+ ((  i > LIMIT ))
+ echo -en '\n Enter NUMBER of character to load or any letter to return to (M)ain Menu: '
+ read -sn 1 NUM
+ case "$NUM" in
+ NUM=1
+ break
+ echo ''
+ [[ ! -n "irc" the Human (100 HP, 0 EXP, 1 items, sector C2) ]]
++ awk '{if (/^CHARACTER:/) { RLENGTH = match($0,/: /); print substr($0, RLENGTH+2);}}' /home/sigg3/.biamin/irc.sheet
+ CHAR=irc
+ [[ ! -n irc ]]
+ BiaminSetup
+ BiaminSetup_MakeBaseChar
+ CHAR_BATTLES=0
+ CHAR_EXP=0
+ CHAR_GPS=C2
+ CHAR_HEALTH=100
+ CHAR_ITEMS=0
+ CHAR_KILLS=0
+ CHAR_HOME=C2
++ bc
+++ RollDice2 11
+++ RollDice 11
+++ DICE_SIZE=11
+++ DICE=8
+++ echo 8
+ CHAR_FOOD=12
+ BBSMSG=0
+ VAL_GOLD=1
+ VAL_TOBACCO=1
+ VAL_CHANGE=0.15
+ STARVATION=0
++ TurnFromDate
++ local YEAR MONTH DAY
++ read -r YEAR MONTH DAY
+++ date '+%-y %-m %-d'
++ bc
+ TURN=5450
+ INV_ALMANAC=0
++ echo irc
++ tr '[:upper:]' '[:lower:]'
++ tr -d ' '
+ CHARSHEET=/home/sigg3/.biamin/irc.sheet
+ [[ -f /home/sigg3/.biamin/irc.sheet ]]
+ BiaminSetup_LoadCharsheet
+ echo -en ' Welcome back, irc!\n Loading character sheet ...'
+ BiaminSetup_UpdateOldSaves /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^HOME:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^BBSMSG:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^STARVATION:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^TURN:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^INV_ALMANAC:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^GOLD:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^TOBACCO:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^FOOD:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^VAL_GOLD:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^VAL_TOBACCO:' /home/sigg3/.biamin/irc.sheet
+ grep -Eq '^VAL_CHANGE:' /home/sigg3/.biamin/irc.sheet
++ awk '
                  {
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /);
                  	                 CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { RACE= $2 }
                   if (/^BATTLES:/)    { BATTLES = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^KILLS:/)      { KILLS = $2 }
                   if (/^HOME:/)       { HOME = $2 }
                   if (/^GOLD:/)       { GOLD = $2 }
                   if (/^TOBACCO:/)    { TOBACCO = $2 }
                   if (/^FOOD:/)       { FOOD = $2 }
                   if (/^BBSMSG:/)     { BBSMSG = $2 }
                   if (/^VAL_GOLD:/)   { VAL_GOLD = $2 }
                   if (/^VAL_TOBACCO:/){ VAL_TOBACCO = $2 }
                   if (/^VAL_CHANGE:/) { VAL_CHANGE = $2 }
                   if (/^STARVATION:/) { STARVATION = $2 }
                   if (/^TURN:/)        { TURN= $2 }
                   if (/^INV_ALMANAC:/) { INV_ALMANAC = $2 }
                  }
                 END {
                 print CHARACTER ";" RACE ";" BATTLES ";" EXPERIENCE ";" LOCATION ";" HEALTH ";" ITEMS ";" KILLS ";" HOME ";" GOLD ";" TOBACCO ";" FOOD ";" BBSMSG ";" VAL_GOLD ";" VAL_TOBACCO ";" VAL_CHANGE ";" STARVATION ";" TURN ";" INV_ALMANAC ";"
                 }' /home/sigg3/.biamin/irc.sheet
+ local 'CHAR_TMP=irc;1;0;0;C2;100;1;0;C2;6;5;8.50;9;.55;1;0.15;0;5464;1;'
+ IFS=';'
+ read -r CHAR CHAR_RACE CHAR_BATTLES CHAR_EXP CHAR_GPS CHAR_HEALTH CHAR_ITEMS CHAR_KILLS CHAR_HOME CHAR_GOLD CHAR_TOBACCO CHAR_FOOD BBSMSG VAL_GOLD VAL_TOBACCO VAL_CHANGE STARVATION TURN INV_ALMANAC
+ ((  CHAR_HEALTH <= 0  ))
+ BiaminSetup_SetRaceAbilities 1
+ read -r CHAR_RACE_STR HEALING STRENGTH ACCURACY FLEE OFFSET_GOLD OFFSET_TOBACCO
+ BiaminSetup_SetItemsAbilities 1
+ HaveItem 1
+ ((  1 > 1  ))
+ return 1
+ HaveItem 3
+ ((  1 > 3  ))
+ return 1
+ HaveItem 6
+ ((  1 > 6  ))
+ return 1
+ HaveItem 7
+ ((  1 > 7  ))
+ return 1
+ Sleep 2
+ read -n 1 -t 2
+ (( DISABLE_CHEATS == 1 && CHAR_HEALTH >= 150 ))
+ Intro
++ Capitalize irc
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ SHORTNAME=Irc
+ MapCreate
+ MAPS=($(find "$GAMEDIR"/ -name '*.map' | sort))
++ find /home/sigg3/.biamin/ -name '*.map'
++ sort
+ [[ -n '' ]]
++ cat
+ MAP='       A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R
   #=========================================================================#
 1 )   x   x   x   x   x   @   .   .   .   T   x   x   x   x   x   x   @   T (
 2 )   x   x   H   x   @   @   .   @   @   x   x   x   x   x   @   @   @   @ (
 3 )   @   @   .   @   @   @   .   x   x   x   x   x   @   x   @   x   @   @ (
 4 )   @   @   .   @   @   @   .   @   x   x   x   @   T   x   x   x   x   x (
 5 )   @   @   .   .   T   .   .   @   @   @   @   @   .   @   x   x   x   x (
 6 )   @   @   @   @   .   @   @   @   @   @   @   @   .   @   @   x   x   x (
 7 )   @   @   @   @   .   .   .   T   @   @   @   @   .   @   @   x   x   x (
 8 )   @   @   T   .   .   @   @   @   @   @   @   .   .   .   .   .   .   x (
 9 )   @   @   .   @   @   @   @   @   @   @   .   .   @   x   @   @   .   . (
10 )   @   @   .   @   @   @   T   @   @   @   .   @   @   x   x   x   x   . (
11 )   T   .   .   .   .   .   .   .   @   @   .   x   x   C   x   x   x   . (
12 )   x   @   @   @   .   @   @   .   .   .   .   x   x   x   x   x   x   . (
13 )   x   x   @   x   .   @   @   @   @   @   .   @   x   x   @   @   @   . (
14 )   x   x   x   x   .   @   @   @   @   T   .   @   x   x   @   @   .   . (
15 )   x   x   x   T   .   @   @   @   @   @   @   @   @   T   .   .   .   @ (
   #=========================================================================#
          LEGEND: x = Mountain, . = Road, T = Town, @ = Forest         N
                  H = Home (Heal Your Wounds) C = Oldburg Castle     W + E
                                                                       S'
+ HotzonesDistribute 1
+ local ITEMS_2_SCATTER=7
+ HOTZONE=()
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=5
+++ echo 5
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=3
+++ echo 3
++ XYtoGPS 5 3
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=E3
+ [[ E3 == \C\2 ]]
+ CheckHotzones E3
++ grep -E '(^| )E3( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=E3
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=5
+++ echo 5
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=6
+++ echo 6
++ XYtoGPS 5 6
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=E6
+ [[ E6 == \C\2 ]]
+ CheckHotzones E6
++ grep -E '(^| )E6( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=E6
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=15
+++ echo 15
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=7
+++ echo 7
++ XYtoGPS 15 7
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=O7
+ [[ O7 == \C\2 ]]
+ CheckHotzones O7
++ grep -E '(^| )O7( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=O7
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=9
+++ echo 9
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=13
+++ echo 13
++ XYtoGPS 9 13
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=I13
+ [[ I13 == \C\2 ]]
+ CheckHotzones I13
++ grep -E '(^| )I13( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=I13
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=9
+++ echo 9
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=11
+++ echo 11
++ XYtoGPS 9 11
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=I11
+ [[ I11 == \C\2 ]]
+ CheckHotzones I11
++ grep -E '(^| )I11( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=I11
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=13
+++ echo 13
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=14
+++ echo 14
++ XYtoGPS 13 14
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=M14
+ [[ M14 == \C\2 ]]
+ CheckHotzones M14
++ grep -E '(^| )M14( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=M14
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=7
+++ echo 7
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=4
+++ echo 4
++ XYtoGPS 7 4
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=G4
+ [[ G4 == \C\2 ]]
+ CheckHotzones G4
++ grep -E '(^| )G4( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=G4
+ (( ITEMS_2_SCATTER > 0  ))
+ WORLDCHANGE_COUNTDOWN=0
+ WorldPriceFixing
+ local VAL_FOOD=1
++ bc
+ PRICE_FxG=1.81
++ bc
+ PRICE_FxT=1.00
++ bc
+ PRICE_GxT=.55
++ bc
+ PRICE_GxF=.55
++ bc
+ PRICE_TxG=1.81
++ bc
+ PRICE_TxF=1.00
+ GX_Intro 60
+ clear
+ cat
+ local COUNTDOWN=60
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n '                         Press (A)ny key to continue..'
+ tput sc
+ (( COUNTDOWN-- ))
+ tput rc
+ (( COUNTDOWN % 2 ))
+ echo -n .
+ read -sn 1 -t 1
+ break
+ NODICE=1
+ NewSector
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=65
++ bc
+ MONTH=2
++ bc
+ DAY=5
++ bc
+ WEEKDAY=5
++ bc
+ MOON=6
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 6
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 6th
++ return 0
++ MonthString 3
++ echo Plough-Tide
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='6th of Plough-Tide in the 16th Cycle'
+ CheckForItem C2
+ ((  C2 < MAX_ITEMS  ))
+ CheckHotzones C2
++ grep -E '(^| )C2( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C2
++ read -r MAP_X MAP_Y
+++ GPStoXY C2
+++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
++ awk '{ if ( NR == 4) { print $5; }}'
+ SCENARIO=H
+ GX_Place H
+ clear
+ case "$1" in
+ PLACE=Home
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n 1 ]]
+ unset NODICE
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=8.25
+ echo 'You eat .25 food from your stock: 8.25 remaining ..'
+ (( STARVATION ))
+ Sleep 1.5
+ read -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=57
++ echo 57
+ ((  57 > 15  ))
+ return 0
+ true
+ GX_Place H
+ clear
+ case "$1" in
+ PLACE=Home
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter     (B)ulletin     (R)est     (M)ap and Travel     (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo c
+ local ACTION=c
+ case "$ACTION" in
+ DisplayCharsheet
++ bc
+ local MURDERSCORE=0
++ Capitalize human
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ local RACE=Human
+ local 'CHARSHEET_INV_STR=6 Gold, 5 Tobacco, 8.25 Food'
+ ((  INV_ALMANAC == 1  ))
+ CHARSHEET_INV_STR+=', Almanac'
+ GX_CharSheet
+ [[ -z '' ]]
+ local DISP=1
+ clear
+ cat
+ tput sc
+ ((  DISP == 1  ))
+ MvAddStr 4 11 'C  H  A  R  A  C  T  E  R     S  H E  E  T'
+ tput cup 4 11
+ printf %s 'C  H  A  R  A  C  T  E  R     S  H E  E  T'
+ MvAddStr 6 11 '            s t a t i s t i c s           '
+ tput cup 6 11
+ printf %s '            s t a t i s t i c s           '
+ tput rc
+ cat
+ case "$INV_ALMANAC" in
+ MakePrompt '(D)isplay Race Info;(A)lmanac;(C)ontinue;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo a
+ (( INV_ALMANAC ))
+ Almanac
+ GX_CharSheet 2
+ [[ -z 2 ]]
+ local DISP=2
+ clear
+ cat
+ tput sc
+ ((  DISP == 1  ))
+ MvAddStr 4 11 '         A   L   M   A   N   A   C'
+ tput cup 4 11
+ printf %s '         A   L   M   A   N   A   C'
+ tput rc
++ WeekdayString 5
++ echo Melethday
++ Ordial 6
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 6th
++ return 0
++ MonthString 3
++ echo Plough-Tide
+ ALMANAC_SUB='Melethday 6th of Plough-Tide'
+ tput sc
++ Strlen 'Melethday 6th of Plough-Tide'
++ awk '{ print length($0); }'
+ MvAddStr 6 18 'Melethday 6th of Plough-Tide'
+ tput cup 6 18
+ printf %s 'Melethday 6th of Plough-Tide'
+ tput rc
+ cat
+ MakeCalendar
+ local a=0 i
+ CALENDAR=()
+ local FIRSTDAY=5460
++ bc
+ FIRSTDAY=0
+ (( FIRSTDAY == 0 ))
+ FIRSTDAY=7
+ (( FIRSTDAY > 1 ))
++ printf %18c ' '
+ CALENDAR[a]='                  '
+ (( i = 1 ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 1
+ CALENDAR[a]+='  1'
++ Strlen '                    1'
++ awk '{ print length($0); }'
+ ((  21 == 21 ))
+ (( a++ ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 2
+ CALENDAR[a]+='  2'
++ Strlen '  2'
++ awk '{ print length($0); }'
+ ((  3 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 3
+ CALENDAR[a]+='  3'
++ Strlen '  2  3'
++ awk '{ print length($0); }'
+ ((  6 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 4
+ CALENDAR[a]+='  4'
++ Strlen '  2  3  4'
++ awk '{ print length($0); }'
+ ((  9 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 5
+ CALENDAR[a]+='  5'
++ Strlen '  2  3  4  5'
++ awk '{ print length($0); }'
+ ((  12 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 6
+ CALENDAR[a]+='  6'
++ Strlen '  2  3  4  5  6'
++ awk '{ print length($0); }'
+ ((  15 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 7
+ CALENDAR[a]+='  7'
++ Strlen '  2  3  4  5  6  7'
++ awk '{ print length($0); }'
+ ((  18 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 8
+ CALENDAR[a]+='  8'
++ Strlen '  2  3  4  5  6  7  8'
++ awk '{ print length($0); }'
+ ((  21 == 21 ))
+ (( a++ ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 9
+ CALENDAR[a]+='  9'
++ Strlen '  9'
++ awk '{ print length($0); }'
+ ((  3 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 10
+ CALENDAR[a]+=' 10'
++ Strlen '  9 10'
++ awk '{ print length($0); }'
+ ((  6 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 11
+ CALENDAR[a]+=' 11'
++ Strlen '  9 10 11'
++ awk '{ print length($0); }'
+ ((  9 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 12
+ CALENDAR[a]+=' 12'
++ Strlen '  9 10 11 12'
++ awk '{ print length($0); }'
+ ((  12 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 13
+ CALENDAR[a]+=' 13'
++ Strlen '  9 10 11 12 13'
++ awk '{ print length($0); }'
+ ((  15 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 14
+ CALENDAR[a]+=' 14'
++ Strlen '  9 10 11 12 13 14'
++ awk '{ print length($0); }'
+ ((  18 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 15
+ CALENDAR[a]+=' 15'
++ Strlen '  9 10 11 12 13 14 15'
++ awk '{ print length($0); }'
+ ((  21 == 21 ))
+ (( a++ ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 16
+ CALENDAR[a]+=' 16'
++ Strlen ' 16'
++ awk '{ print length($0); }'
+ ((  3 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 17
+ CALENDAR[a]+=' 17'
++ Strlen ' 16 17'
++ awk '{ print length($0); }'
+ ((  6 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 18
+ CALENDAR[a]+=' 18'
++ Strlen ' 16 17 18'
++ awk '{ print length($0); }'
+ ((  9 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 19
+ CALENDAR[a]+=' 19'
++ Strlen ' 16 17 18 19'
++ awk '{ print length($0); }'
+ ((  12 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 20
+ CALENDAR[a]+=' 20'
++ Strlen ' 16 17 18 19 20'
++ awk '{ print length($0); }'
+ ((  15 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 21
+ CALENDAR[a]+=' 21'
++ Strlen ' 16 17 18 19 20 21'
++ awk '{ print length($0); }'
+ ((  18 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 22
+ CALENDAR[a]+=' 22'
++ Strlen ' 16 17 18 19 20 21 22'
++ awk '{ print length($0); }'
+ ((  21 == 21 ))
+ (( a++ ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 23
+ CALENDAR[a]+=' 23'
++ Strlen ' 23'
++ awk '{ print length($0); }'
+ ((  3 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 24
+ CALENDAR[a]+=' 24'
++ Strlen ' 23 24'
++ awk '{ print length($0); }'
+ ((  6 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 25
+ CALENDAR[a]+=' 25'
++ Strlen ' 23 24 25'
++ awk '{ print length($0); }'
+ ((  9 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 26
+ CALENDAR[a]+=' 26'
++ Strlen ' 23 24 25 26'
++ awk '{ print length($0); }'
+ ((  12 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 27
+ CALENDAR[a]+=' 27'
++ Strlen ' 23 24 25 26 27'
++ awk '{ print length($0); }'
+ ((  15 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 28
+ CALENDAR[a]+=' 28'
++ Strlen ' 23 24 25 26 27 28'
++ awk '{ print length($0); }'
+ ((  18 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 29
+ CALENDAR[a]+=' 29'
++ Strlen ' 23 24 25 26 27 28 29'
++ awk '{ print length($0); }'
+ ((  21 == 21 ))
+ (( a++ ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
++ printf ' %2i' 30
+ CALENDAR[a]+=' 30'
++ Strlen ' 30'
++ awk '{ print length($0); }'
+ ((  3 == 21 ))
+ (( i++ ))
+ (( i <= MONTH_LENGTH ))
+ local CAL_Y=11 CAL_X=11
+ tput sc
+ (( i = 0 ))
+ (( 1 ))
+ [[ -n                     1 ]]
+ MvAddStr 11 11 '                    1'
+ tput cup 11 11
+ printf %s '                    1'
+ (( i++ ))
+ (( 1 ))
+ [[ -n   2  3  4  5  6  7  8 ]]
+ MvAddStr 12 11 '  2  3  4  5  6  7  8'
+ tput cup 12 11
+ printf %s '  2  3  4  5  6  7  8'
+ (( i++ ))
+ (( 1 ))
+ [[ -n   9 10 11 12 13 14 15 ]]
+ MvAddStr 13 11 '  9 10 11 12 13 14 15'
+ tput cup 13 11
+ printf %s '  9 10 11 12 13 14 15'
+ (( i++ ))
+ (( 1 ))
+ [[ -n  16 17 18 19 20 21 22 ]]
+ MvAddStr 14 11 ' 16 17 18 19 20 21 22'
+ tput cup 14 11
+ printf %s ' 16 17 18 19 20 21 22'
+ (( i++ ))
+ (( 1 ))
+ [[ -n  23 24 25 26 27 28 29 ]]
+ MvAddStr 15 11 ' 23 24 25 26 27 28 29'
+ tput cup 15 11
+ printf %s ' 23 24 25 26 27 28 29'
+ (( i++ ))
+ (( 1 ))
+ [[ -n  30 ]]
+ MvAddStr 16 11 ' 30'
+ tput cup 16 11
+ printf %s ' 30'
+ (( i++ ))
+ (( 1 ))
+ [[ -n '' ]]
+ break
+ tput rc
+ tput sc
++ MonthString 3
++ echo Plough-Tide
+ local CAL_MONTH_HEADER=Plough-Tide
+ case $(Strlen $(MonthString "$MONTH")) in
+++ MonthString 3
+++ echo Plough-Tide
++ Strlen Plough-Tide
++ awk '{ print length($0); }'
+ MvAddStr 9 15 Plough-Tide
+ tput cup 9 15
+ printf %s Plough-Tide
+ tput rc
+ tput sc
+ case $(WeekdayString "$WEEKDAY") in
++ WeekdayString 5
++ echo Melethday
+ tput cup 12 41
+ (( WEEKDAY == 0 ))
+++ WeekdayString 5
+++ echo Melethday
++ Toupper Melethday
++ awk '{ print toupper($0); }'
+ echo MELETHDAY
+ tput rc
+ tput sc
+ case "$MOON" in
++ Toupper Third Quarter
++ awk '{ print toupper($0); }'
+ MvAddStr 16 50 'THIRD QUARTER'
+ tput cup 16 50
+ printf %s 'THIRD QUARTER'
+ tput rc
++ WeekdayString 5
++ echo Melethday
++ WeekdayTriviaShort 5
++ echo 'Melethril'\''s' Day '(God' of 'Love)'
+ local 'TRIVIA_HEADER=Melethday - Melethril'\''s Day (God of Love)'
+ case "$DAY+$MONTH_REMINDER+$MOON" in
+ '[' -z '' ']'
+ '[' -z '' ']'
+ case "$(WeekdayString $WEEKDAY)+$MOON" in
++ WeekdayString 5
++ echo Melethday
++ WeekdayTriviaLong 5
++ echo Commonly considered 'Lovers'\''' Day, it is also a day of mischief and trickery.
+ local 'TRIVIA1=Commonly considered Lovers'\'' Day, it is also a day of mischief and trickery.'
+ case "$(MonthString $MONTH)+$MOON" in
++ MonthString 3
++ echo Plough-Tide
++ MonthString 3
++ echo Plough-Tide
++ MonthTrivia 3
++ echo 3rd Month of the 'Year\n' Farmers return to their ploughs. Hobbit villages celebrate Springtide.
+ local 'TRIVIA2=Plough-Tide - 3rd Month of the Year\n Farmers return to their ploughs. Hobbit villages celebrate Springtide.'
+ echo -e ' Melethday - Melethril'\''s Day (God of Love)\n Commonly considered Lovers'\'' Day, it is also a day of mischief and trickery.\n\n Plough-Tide - 3rd Month of the Year\n Farmers return to their ploughs. Hobbit villages celebrate Springtide.'
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
++ MakePrompt '(R)eturn'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '                                   (R)eturn                                   '
                                   (R)eturn                                   + true
+ GX_Place H
+ clear
+ case "$1" in
+ PLACE=Home
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter     (B)ulletin     (R)est     (M)ap and Travel     (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo q
+ local ACTION=q
+ case "$ACTION" in
+ CleanUp
+ GX_BiaminTitle
+ clear
+ cat
+ echo -e '\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ (( FIGHTMODE ))
+ [[ -n irc ]]
+ SaveCurrentSheet
+ echo 'CHARACTER: irc
RACE: 1
BATTLES: 0
EXPERIENCE: 0
LOCATION: C2
HEALTH: 100
ITEMS: 1
KILLS: 0
HOME: C2
GOLD: 6
TOBACCO: 5
FOOD: 8.25
BBSMSG: 9
VAL_GOLD: .55
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5465
INV_ALMANAC: 1'
+ echo -e '\nLeaving the realm of magic behind ....\nPlease submit bugs and feedback at <http://sigg3.net/biamin/>'
+ Exit 0
+ tput cnorm
+ [[ -n 0 ]]
+ exit 0
