+ VERSION=1.9
+ WEBURL=http://sigg3.net/biamin/
+ REPO=https://gitorious.org/back-in-a-minute/code
+ GAMEDIR=/home/sigg3/.biamin
+ CONFIG=/home/sigg3/.biamin/config
+ HIGHSCORE=/home/sigg3/.biamin/highscore
+ unset HISTFILE
+ START_LOCATION=C2
+ DISABLE_CHEATS=0
+ HR='- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MAX_BBSMSG=12
+ declare -r YEAR_LENGHT=360
+ declare -r YEAR_MONTHES=12
+ declare -r MONTH_LENGTH=30
+ declare -r MOON_PHASE_LENGTH=4
+ declare -r MOON_CYCLE=32
+ MOON_STR=("New Moon" "Growing Crescent" "First Quarter" "Growing Gibbous" "Full Moon" "Waning Gibbous" "Third Quarter" "Waning Crescent")
+ declare -r MOON_STR
+ MONTH_STR=("Biamin Festival" "Rarely happens, if ever :(" "After-Frost" "1st Month of the Year\n This is the coldest and darkest month of the year. Stay in, stay warm." "Marrsuckur" "2nd Month of the Year\n \"Marrow-sucker\" is a lean month. Some nobles have a custom of fasting." "Plough-Tide" "3rd Month of the Year\n Farmers return to their ploughs. Hobbit villages celebrate Springtide." "Anorlukis" "4th Month of the Year\n The winter darkness is overwon by Anor's arrows. Holy month for Elves." "Summer-Tide" "5th Month of the Year\n Middle of year. While the heat is welcoming, watch out for orcs and goblins!" "Summer-Turn" "6th Month of the Year\n A celebration of the Turn of Anor, in which one gives thanks for any good." "Merentimes" "7th Month of the Year\n From 'Meren' (happiness). This warm month is oft celebrated by travellers." "Harvest Month" "8th Month of the Year\n Autumn is the busiest time of year. And evil grows in the wilderness." "Ringorin" "9th Month of the Year\n From 'Ringorn' (circle, life, produce). Holy month for farmers." "Brew-Tasting Tide" "10th Month of the Year\n Traditional tasting of ales begin this month. Don't venture about alone." "Winter Month" "11th Month of the Year\n By now the stocks are full of produce. Livestock & people shelter in." "Midwinter Offering" "12th Month of the Year\n The Offering is a significant and holy event for priests and people alike.")
+ declare -r -a MONTH_STR
+ declare -r WEEK_LENGTH=7
+ WEEKDAY_STR=("Ringday (Holiday)" "Day of Festivities and Rest" "Men and Halflings celebrate Ringday as the end and beginning of the week." "Moonday" "Mor's Day (Day of the Moon)" "Elves and Dwarves once celebrated Moon Day as the holiest. Some still do." "Brenday" "Brenia's Day (God of Courage)" "Visit the Temple on Brenia's Day to honor those who perished in warfare." "Midweek" "Middle of the Week (Day of Balance)" "In some places, Midweek Eve is celebrated with village dances and ale." "Braigday" "Braig's Day (God of Wilderness)" "Historically, a day of hunting. Nobility still hunt every Braig's Day." "Melethday" "Melethril's Day (God of Love)" "Commonly considered Lovers' Day, it is also a day of mischief and trickery." "Washday" "Final Workday of the Week" "Folk name for Lanthir's Day, the God of Water, Springs and Waterfalls.")
+ declare -r -a WEEKDAY_STR
+ CALENDAR=()
+ declare -r DEATH_FIGHT=0
+ declare -r DEATH_STARVATION=1
+ declare -r GIFT_OF_SIGHT=0
+ declare -r EMERALD_OF_NARCOLEPSY=1
+ declare -r GUARDIAN_ANGEL=2
+ declare -r FAST_MAGIC_BOOTS=3
+ declare -r QUICK_RABBIT_REACTION=4
+ declare -r FLASK_OF_TERRIBLE_ODOUR=5
+ declare -r TWO_HANDED_BROADSWORD=6
+ declare -r STEADY_HAND_BREW=7
+ declare -r MAX_ITEMS=8
+ DICE_GAME_CHANCES=(0 1 3 6 9 12 14 17 14 12 9 6 3)
+ declare -r -a DICE_GAME_CHANCES
+ DICE_GAME_WINNINGS=(0 1 100 85 70 55 40 25 40 55 70 85 100)
+ declare -r -a DICE_GAME_WINNINGS
+ RACES=("Race   Healing Strength Accuracy Flee Offset_Gold Offset_Tobacco" "human  3       3        3        3    12           8" "elf    4       3        4        1     8          12" "dwarf  2       5        3        2    14           6" "hobbit 4       1        4        3     6          14")
+ declare -r -a RACES
+ declare -r MAX_RACES=4
+ declare -r INITIAL_VALUE_GOLD=1
+ declare -r INITIAL_VALUE_TOBACCO=1
+ declare -r INITIAL_VALUE_CHANGE=0.15
+ [[ ! -d /home/sigg3/.biamin ]]
+ [[ ! -f /home/sigg3/.biamin/config ]]
+ [[ -f /home/sigg3/.biamin/highscore ]]
+ grep -q d41d8cd98f00b204e9800998ecf8427e /home/sigg3/.biamin/highscore
+ [[ ! -n '' ]]
+ for PAGER in less more
++ which less
+ PAGER=/usr/bin/less
+ [[ -n /usr/bin/less ]]
+ break
+ CLI_ParseArguments p
+ [[ ! -n p ]]
+ [[ -n p ]]
+ case "$1" in
+ shift
++ grep -Eq '^-'
+ [[ ! -n '' ]]
+ CHAR=
+ echo 'Launching Back in a Minute..'
+ shift
+ [[ -n '' ]]
+ echo 'Putting on the traveller'\''s boots..'
+ read -r GAMEDIR COLOR
++ awk '{ if (/^GAMEDIR:/)  { GAMEDIR= $2 }
                                   if (/^COLOR:/)    { COLOR = $2  } }
                            END { print GAMEDIR, COLOR ;}' /home/sigg3/.biamin/config
+ CheckBiaminDependencies
+ declare -a CRITICAL NONCRITICAL
+ local PROGRAM
+ echo 'Checking dependencies...'
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled tput
++ which tput
+ [[ -n /usr/bin/tput ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled awk
++ which awk
+ [[ -n /usr/bin/awk ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled bc
++ which bc
+ [[ -n /usr/bin/bc ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled sed
++ which sed
+ [[ -n /usr/bin/sed ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled printf
++ which printf
+ [[ -n /usr/bin/printf ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled date
++ which date
+ [[ -n /usr/bin/date ]]
+ return 0
+ for PROGRAM in '"curl"' '"wget"'
+ IsInstalled curl
++ which curl
+ [[ -n /usr/bin/curl ]]
+ return 0
+ for PROGRAM in '"curl"' '"wget"'
+ IsInstalled wget
++ which wget
+ [[ -n /usr/bin/wget ]]
+ return 0
+ [[ -n '' ]]
+ [[ -n '' ]]
++ tput cols
++ tput lines
+ ((  80 > 79 && 24 > 23 ))
+ unset CRITICAL NONCRITICAL PROGRAM
+ ColorConfig 1
+ case "$1" in
+ echo 'Enabling color for maps!'
+ (( COLOR == 1 ))
+ declare -gr 'YELLOW=\033[1;33m'
+ declare -gr 'RESET=\033[0;39m'
+ declare -gr 'CLEAR_LINE=\e[1K\e[80D'
+ ReseedRandom
+ [[ -n '' ]]
+ case "$OSTYPE" in
++ date +%N
+ RANDOM=024313337
+ trap CleanUp SIGHUP SIGINT SIGTERM
+ tput civis
+ [[ -n '' ]]
+ MainMenu
+ [[ ! -n '' ]]
+ GX_Banner
+ GX_BiaminTitle
+ clear
+ cat
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(P)lay;(L)oad game;(H)ighscore;(C)redits;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo l
+ LoadGame
+ local SHEETS FILES i=0 LIMIT=9 OFFSET=0 NUM=0 a
++ find /home/sigg3/.biamin/ -name '*.sheet'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/debug.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/debug.sheet
+ SHEETS[$i]='"debug" the  (100 HP, 0 EXP, 0 items, sector C2)'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/irc.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/irc.sheet
+ SHEETS[$i]='"irc" the Human (5 HP, 110 EXP, 1 items, sector E5)'
+ for loadSHEET in '$(find "$GAMEDIR/" -name '\''*.sheet'\'')'
+ (( ++i ))
+ FILES[$i]=/home/sigg3/.biamin/elvis.sheet
++ awk '{ # Character can consist from two and more words, not only "Corum" but "Corum Jhaelen Irsei" for instance
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /); CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { if ($2 == 1 ) { RACE="Human"; }
               		                 if ($2 == 2 ) { RACE="Elf"; }
             		                 if ($2 == 3 ) { RACE="Dwarf"; }
            		                 if ($2 == 4 ) { RACE="Hobbit";} }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 } }
                 END {
                 print "\"" CHARACTER "\" the " RACE " (" HEALTH " HP, " EXPERIENCE " EXP, " ITEMS " items, sector " LOCATION ")"
                 }' /home/sigg3/.biamin/elvis.sheet
+ SHEETS[$i]='"Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5)'
+ GX_LoadGame
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ [[ ! -n "debug" the  (100 HP, 0 EXP, 0 items, sector C2) "irc" the Human (5 HP, 110 EXP, 1 items, sector E5) "Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5) ]]
+ true
+ tput rc
+ tput ed
+ (( a=1 ))
+ (( a <= LIMIT  ))
+ [[ -n "debug" the  (100 HP, 0 EXP, 0 items, sector C2) ]]
+ echo '1. "debug" the  (100 HP, 0 EXP, 0 items, sector C2)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n "irc" the Human (5 HP, 110 EXP, 1 items, sector E5) ]]
+ echo '2. "irc" the Human (5 HP, 110 EXP, 1 items, sector E5)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n "Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5) ]]
+ echo '3. "Elvis" the Human (45 HP, -20 EXP, 0 items, sector E5)'
+ (( a++ ))
+ (( a <= LIMIT  ))
+ [[ -n '' ]]
+ break
+ ((  i > LIMIT ))
+ echo -en '\n Enter NUMBER of character to load or any letter to return to (M)ain Menu: '
+ read -sn 1 NUM
+ case "$NUM" in
+ NUM=1
+ break
+ echo ''
+ [[ ! -n "debug" the  (100 HP, 0 EXP, 0 items, sector C2) ]]
++ awk '{if (/^CHARACTER:/) { RLENGTH = match($0,/: /); print substr($0, RLENGTH+2);}}' /home/sigg3/.biamin/debug.sheet
+ CHAR=debug
+ [[ ! -n debug ]]
+ BiaminSetup
+ BiaminSetup_MakeBaseChar
+ CHAR_BATTLES=0
+ CHAR_EXP=0
+ CHAR_GPS=C2
+ CHAR_HEALTH=100
+ CHAR_ITEMS=0
+ CHAR_KILLS=0
+ CHAR_HOME=C2
++ bc
+++ RollDice2 11
+++ RollDice 11
+++ DICE_SIZE=11
+++ DICE=5
+++ echo 5
+ CHAR_FOOD=9
+ BBSMSG=0
+ VAL_GOLD=1
+ VAL_TOBACCO=1
+ VAL_CHANGE=0.15
+ STARVATION=0
++ TurnFromDate
++ local YEAR MONTH DAY
++ read -r YEAR MONTH DAY
+++ date '+%-y %-m %-d'
++ bc
+ TURN=5457
+ INV_ALMANAC=0
++ echo debug
++ tr '[:upper:]' '[:lower:]'
++ tr -d ' '
+ CHARSHEET=/home/sigg3/.biamin/debug.sheet
+ [[ -f /home/sigg3/.biamin/debug.sheet ]]
+ BiaminSetup_LoadCharsheet
+ echo -en ' Welcome back, debug!\n Loading character sheet ...'
+ BiaminSetup_UpdateOldSaves /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^HOME:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^BBSMSG:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^STARVATION:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^TURN:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^INV_ALMANAC:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^GOLD:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^TOBACCO:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^FOOD:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^VAL_GOLD:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^VAL_TOBACCO:' /home/sigg3/.biamin/debug.sheet
+ grep -Eq '^VAL_CHANGE:' /home/sigg3/.biamin/debug.sheet
++ awk '
                  {
                   if (/^CHARACTER:/)  { RLENGTH = match($0,/: /);
                  	                 CHARACTER = substr($0, RLENGTH+2); }
                   if (/^RACE:/)       { RACE= $2 }
                   if (/^BATTLES:/)    { BATTLES = $2 }
                   if (/^EXPERIENCE:/) { EXPERIENCE = $2 }
                   if (/^LOCATION:/)   { LOCATION = $2 }
                   if (/^HEALTH:/)     { HEALTH = $2 }
                   if (/^ITEMS:/)      { ITEMS = $2 }
                   if (/^KILLS:/)      { KILLS = $2 }
                   if (/^HOME:/)       { HOME = $2 }
                   if (/^GOLD:/)       { GOLD = $2 }
                   if (/^TOBACCO:/)    { TOBACCO = $2 }
                   if (/^FOOD:/)       { FOOD = $2 }
                   if (/^BBSMSG:/)     { BBSMSG = $2 }
                   if (/^VAL_GOLD:/)   { VAL_GOLD = $2 }
                   if (/^VAL_TOBACCO:/){ VAL_TOBACCO = $2 }
                   if (/^VAL_CHANGE:/) { VAL_CHANGE = $2 }
                   if (/^STARVATION:/) { STARVATION = $2 }
                   if (/^TURN:/)        { TURN= $2 }
                   if (/^INV_ALMANAC:/) { INV_ALMANAC = $2 }
                  }
                 END {
                 print CHARACTER ";" RACE ";" BATTLES ";" EXPERIENCE ";" LOCATION ";" HEALTH ";" ITEMS ";" KILLS ";" HOME ";" GOLD ";" TOBACCO ";" FOOD ";" BBSMSG ";" VAL_GOLD ";" VAL_TOBACCO ";" VAL_CHANGE ";" STARVATION ";" TURN ";" INV_ALMANAC ";"
                 }' /home/sigg3/.biamin/debug.sheet
+ local 'CHAR_TMP=debug;;0;0;C2;100;0;0;C2;;;14;0;1;1;0.15;0;5453;0;'
+ IFS=';'
+ read -r CHAR CHAR_RACE CHAR_BATTLES CHAR_EXP CHAR_GPS CHAR_HEALTH CHAR_ITEMS CHAR_KILLS CHAR_HOME CHAR_GOLD CHAR_TOBACCO CHAR_FOOD BBSMSG VAL_GOLD VAL_TOBACCO VAL_CHANGE STARVATION TURN INV_ALMANAC
+ ((  CHAR_HEALTH <= 0  ))
+ BiaminSetup_SetRaceAbilities ''
+ read -r CHAR_RACE_STR HEALING STRENGTH ACCURACY FLEE OFFSET_GOLD OFFSET_TOBACCO
+ BiaminSetup_SetItemsAbilities 0
+ HaveItem 1
+ ((  0 > 1  ))
+ return 1
+ HaveItem 3
+ ((  0 > 3  ))
+ return 1
+ HaveItem 6
+ ((  0 > 6  ))
+ return 1
+ HaveItem 7
+ ((  0 > 7  ))
+ return 1
+ Sleep 2
+ read -n 1 -t 2
+ (( DISABLE_CHEATS == 1 && CHAR_HEALTH >= 150 ))
+ Intro
++ Capitalize debug
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ SHORTNAME=Debug
+ MapCreate
+ MAPS=($(find "$GAMEDIR"/ -name '*.map' | sort))
++ find /home/sigg3/.biamin/ -name '*.map'
++ sort
+ [[ -n /home/sigg3/.biamin/diffway.map /home/sigg3/.biamin/testing.map ]]
+ echo -en '\n Custom maps found in /home/sigg3/.biamin\n Would you like to play a (C)ustom map or the (D)efault? '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo a
+ [[ a == [Cc] ]]
++ cat
+ MAP='       A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R
   #=========================================================================#
 1 )   x   x   x   x   x   @   .   .   .   T   x   x   x   x   x   x   @   T (
 2 )   x   x   H   x   @   @   .   @   @   x   x   x   x   x   @   @   @   @ (
 3 )   @   @   .   @   @   @   .   x   x   x   x   x   @   x   @   x   @   @ (
 4 )   @   @   .   @   @   @   .   @   x   x   x   @   T   x   x   x   x   x (
 5 )   @   @   .   .   T   .   .   @   @   @   @   @   .   @   x   x   x   x (
 6 )   @   @   @   @   .   @   @   @   @   @   @   @   .   @   @   x   x   x (
 7 )   @   @   @   @   .   .   .   T   @   @   @   @   .   @   @   x   x   x (
 8 )   @   @   T   .   .   @   @   @   @   @   @   .   .   .   .   .   .   x (
 9 )   @   @   .   @   @   @   @   @   @   @   .   .   @   x   @   @   .   . (
10 )   @   @   .   @   @   @   T   @   @   @   .   @   @   x   x   x   x   . (
11 )   T   .   .   .   .   .   .   .   @   @   .   x   x   C   x   x   x   . (
12 )   x   @   @   @   .   @   @   .   .   .   .   x   x   x   x   x   x   . (
13 )   x   x   @   x   .   @   @   @   @   @   .   @   x   x   @   @   @   . (
14 )   x   x   x   x   .   @   @   @   @   T   .   @   x   x   @   @   .   . (
15 )   x   x   x   T   .   @   @   @   @   @   @   @   @   T   .   .   .   @ (
   #=========================================================================#
          LEGEND: x = Mountain, . = Road, T = Town, @ = Forest         N
                  H = Home (Heal Your Wounds) C = Oldburg Castle     W + E
                                                                       S'
+ HotzonesDistribute 0
+ local ITEMS_2_SCATTER=8
+ HOTZONE=()
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=5
+++ echo 5
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=3
+++ echo 3
++ XYtoGPS 5 3
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=E3
+ [[ E3 == \C\2 ]]
+ CheckHotzones E3
++ grep -E '(^| )E3( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=E3
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=11
+++ echo 11
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=3
+++ echo 3
++ XYtoGPS 11 3
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=K3
+ [[ K3 == \C\2 ]]
+ CheckHotzones K3
++ grep -E '(^| )K3( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=K3
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=8
+++ echo 8
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=1
+++ echo 1
++ XYtoGPS 8 1
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=H1
+ [[ H1 == \C\2 ]]
+ CheckHotzones H1
++ grep -E '(^| )H1( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=H1
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=10
+++ echo 10
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=2
+++ echo 2
++ XYtoGPS 10 2
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=J2
+ [[ J2 == \C\2 ]]
+ CheckHotzones J2
++ grep -E '(^| )J2( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=J2
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=2
+++ echo 2
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=10
+++ echo 10
++ XYtoGPS 2 10
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=B10
+ [[ B10 == \C\2 ]]
+ CheckHotzones B10
++ grep -E '(^| )B10( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=B10
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=2
+++ echo 2
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=11
+++ echo 11
++ XYtoGPS 2 11
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=B11
+ [[ B11 == \C\2 ]]
+ CheckHotzones B11
++ grep -E '(^| )B11( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=B11
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=15
+++ echo 15
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=10
+++ echo 10
++ XYtoGPS 15 10
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=O10
+ [[ O10 == \C\2 ]]
+ CheckHotzones O10
++ grep -E '(^| )O10( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=O10
+ (( ITEMS_2_SCATTER > 0  ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=4
+++ echo 4
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=6
+++ echo 6
++ XYtoGPS 4 6
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM=D6
+ [[ D6 == \C\2 ]]
+ CheckHotzones D6
++ grep -E '(^| )D6( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=D6
+ (( ITEMS_2_SCATTER > 0  ))
+ WORLDCHANGE_COUNTDOWN=0
+ WorldPriceFixing
+ local VAL_FOOD=1
++ bc
+ PRICE_FxG=1.00
++ bc
+ PRICE_FxT=1.00
++ bc
+ PRICE_GxT=1.00
++ bc
+ PRICE_GxF=1.00
++ bc
+ PRICE_TxG=1.00
++ bc
+ PRICE_TxF=1.00
+ GX_Intro 60
+ clear
+ cat
+ local COUNTDOWN=60
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n '                         Press (A)ny key to continue..'
+ tput sc
+ (( COUNTDOWN-- ))
+ tput rc
+ (( COUNTDOWN % 2 ))
+ echo -n .
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ tput rc
+ (( COUNTDOWN % 2 ))
+ echo -n ' '
+ read -sn 1 -t 1
+ break
+ NODICE=1
+ NewSector
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=54
++ bc
+ MONTH=1
++ bc
+ DAY=24
++ bc
+ WEEKDAY=1
++ bc
+ MOON=3
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 25
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 25th
++ return 0
++ MonthString 2
++ echo Marrsuckur
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='25th of Marrsuckur in the 16th Cycle'
+ CheckForItem C2
+ ((  C2 < MAX_ITEMS  ))
+ CheckHotzones C2
++ grep -E '(^| )C2( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C2
++ read -r MAP_X MAP_Y
+++ GPStoXY C2
+++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
++ awk '{ if ( NR == 4) { print $5; }}'
+ SCENARIO=H
+ GX_Place H
+ clear
+ case "$1" in
+ PLACE=Home
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n 1 ]]
+ unset NODICE
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=13.75
+ echo 'You eat .25 food from your stock: 13.75 remaining ..'
+ (( STARVATION ))
+ Sleep 1.5
+ read -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=59
++ echo 59
+ ((  59 > 15  ))
+ return 0
+ true
+ GX_Place H
+ clear
+ case "$1" in
+ PLACE=Home
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter     (B)ulletin     (R)est     (M)ap and Travel     (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ local ACTION=m
+ case "$ACTION" in
+ MapNav m
+ read -r MAP_X MAP_Y
++ GPStoXY C2
++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
+ case "$1" in
+ GX_Map
+ local ITEM2C_Y=0 ITEM2C_X=0
+ HaveItem 0
+ ((  0 > 0  ))
+ return 1
+ clear
++ printf %s '\033[0;39m'
++ printf %s '\033[1;33m~\033[0;39m'
++ printf %s '\033[1;33mo\033[0;39m'
+ awk 'BEGIN { FS = "   " ; OFS = "   "; }
    { # place "o" (player) on map
      if (NR == 4) {  # lazy fix for ASCII borders
         if (3 == 18 ) { $4="o ("; }
         else                 { $4="o";   }
         }
      # if player has Gift-Of-Sight and not all items are found
      if ( 0 > 0 && 0 < 8) {
         # place ITEM2C on map
         # ITEM2C_Y+2 and ITEM2C_X+1 - fix for boards
 	 if (NR == 2) {
            if ( 0 == 18 ) { $1="~ ("; }
            else                     { $1="~";   }
            }
         }
      # All color on map sets here
      if (1 == 1 ) {
         # Terminal color scheme bugfix
         if ( NR == 1 ) { gsub(/^/, "\033[0;39m"); }
         # colorise "o" (player) and "~" (ITEM2C)
	 if ( NR > 2 && NR < 19 ) {
 	    gsub(/~/, "\033[1;33m~\033[0;39m")
	    gsub(/o/, "\033[1;33mo\033[0;39m")
	    }
         }
      print; }'
+ echo -e ' \033[1;33mo debug\033[0;39m is currently in C2 (Home)\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ read -sn 1 -p ' I want to go  (W) North  (A) West  (S)outh  (D) East  (Q)uit :  ' DEST
+ case "$DEST" in
+ echo -n 'You go South'
+ ((  MAP_Y != 15  ))
+ ((  MAP_Y++  ))
++ XYtoGPS 3 3
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=C3
+ Sleep 1.5
+ read -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=55
++ bc
+ MONTH=1
++ bc
+ DAY=25
++ bc
+ WEEKDAY=2
++ bc
+ MOON=3
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 26
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 26th
++ return 0
++ MonthString 2
++ echo Marrsuckur
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='26th of Marrsuckur in the 16th Cycle'
+ CheckForItem C3
+ ((  C3 < MAX_ITEMS  ))
+ CheckHotzones C3
++ grep -E '(^| )C3( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C3
++ read -r MAP_X MAP_Y
+++ GPStoXY C3
+++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
++ awk '{ if ( NR == 5) { print $5; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight .
+ RollDice 100
+ DICE_SIZE=100
+ DICE=30
+ [[ ! -n '' ]]
+ case "$1" in
+ RollForEvent 20 fight
+ echo -e 'Rolling for fight: D100 <= 20\nD100: 30'
+ Sleep 1.5
+ read -n 1 -t 1.5
+ ((  DICE <= 20  ))
+ return 1
+ return 0
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=13.50
+ echo 'You eat .25 food from your stock: 13.50 remaining ..'
+ (( STARVATION ))
+ Sleep 1.5
+ read -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=25
++ echo 25
+ ((  25 > 15  ))
+ return 0
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo s
+ local ACTION=s
+ case "$ACTION" in
+ MapNav s
+ read -r MAP_X MAP_Y
++ GPStoXY C3
++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
+ case "$1" in
+ DEST=s
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$DEST" in
+ echo -n 'You go South'
+ ((  MAP_Y != 15  ))
+ ((  MAP_Y++  ))
++ XYtoGPS 3 4
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=C4
+ Sleep 1.5
+ read -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=56
++ bc
+ MONTH=1
++ bc
+ DAY=26
++ bc
+ WEEKDAY=3
++ bc
+ MOON=4
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 27
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 27th
++ return 0
++ MonthString 2
++ echo Marrsuckur
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='27th of Marrsuckur in the 16th Cycle'
+ CheckForItem C4
+ ((  C4 < MAX_ITEMS  ))
+ CheckHotzones C4
++ grep -E '(^| )C4( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C4
++ read -r MAP_X MAP_Y
+++ GPStoXY C4
+++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
++ awk '{ if ( NR == 6) { print $5; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight .
+ RollDice 100
+ DICE_SIZE=100
+ DICE=77
+ [[ ! -n '' ]]
+ case "$1" in
+ RollForEvent 20 fight
+ echo -e 'Rolling for fight: D100 <= 20\nD100: 77'
+ Sleep 1.5
+ read -n 1 -t 1.5
+ ((  DICE <= 20  ))
+ return 1
+ return 0
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=13.25
+ echo 'You eat .25 food from your stock: 13.25 remaining ..'
+ (( STARVATION ))
+ Sleep 1.5
+ read -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=69
++ echo 69
+ ((  69 > 15  ))
+ return 0
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo s
+ local ACTION=s
+ case "$ACTION" in
+ MapNav s
+ read -r MAP_X MAP_Y
++ GPStoXY C4
++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
+ case "$1" in
+ DEST=s
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$DEST" in
+ echo -n 'You go South'
+ ((  MAP_Y != 15  ))
+ ((  MAP_Y++  ))
++ XYtoGPS 3 5
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=C5
+ Sleep 1.5
+ read -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=57
++ bc
+ MONTH=1
++ bc
+ DAY=27
++ bc
+ WEEKDAY=4
++ bc
+ MOON=4
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 28
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 28th
++ return 0
++ MonthString 2
++ echo Marrsuckur
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='28th of Marrsuckur in the 16th Cycle'
+ CheckForItem C5
+ ((  C5 < MAX_ITEMS  ))
+ CheckHotzones C5
++ grep -E '(^| )C5( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C5
++ read -r MAP_X MAP_Y
+++ GPStoXY C5
+++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
++ awk '{ if ( NR == 7) { print $5; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight .
+ RollDice 100
+ DICE_SIZE=100
+ DICE=81
+ [[ ! -n '' ]]
+ case "$1" in
+ RollForEvent 20 fight
+ echo -e 'Rolling for fight: D100 <= 20\nD100: 81'
+ Sleep 1.5
+ read -n 1 -t 1.5
+ ((  DICE <= 20  ))
+ return 1
+ return 0
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=13.00
+ echo 'You eat .25 food from your stock: 13.00 remaining ..'
+ (( STARVATION ))
+ Sleep 1.5
+ read -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=48
++ echo 48
+ ((  48 > 15  ))
+ return 0
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ local ACTION=m
+ case "$ACTION" in
+ MapNav m
+ read -r MAP_X MAP_Y
++ GPStoXY C5
++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
+ case "$1" in
+ GX_Map
+ local ITEM2C_Y=0 ITEM2C_X=0
+ HaveItem 0
+ ((  0 > 0  ))
+ return 1
+ clear
++ printf %s '\033[0;39m'
++ printf %s '\033[1;33m~\033[0;39m'
++ printf %s '\033[1;33mo\033[0;39m'
+ awk 'BEGIN { FS = "   " ; OFS = "   "; }
    { # place "o" (player) on map
      if (NR == 7) {  # lazy fix for ASCII borders
         if (3 == 18 ) { $4="o ("; }
         else                 { $4="o";   }
         }
      # if player has Gift-Of-Sight and not all items are found
      if ( 0 > 0 && 0 < 8) {
         # place ITEM2C on map
         # ITEM2C_Y+2 and ITEM2C_X+1 - fix for boards
 	 if (NR == 2) {
            if ( 0 == 18 ) { $1="~ ("; }
            else                     { $1="~";   }
            }
         }
      # All color on map sets here
      if (1 == 1 ) {
         # Terminal color scheme bugfix
         if ( NR == 1 ) { gsub(/^/, "\033[0;39m"); }
         # colorise "o" (player) and "~" (ITEM2C)
	 if ( NR > 2 && NR < 19 ) {
 	    gsub(/~/, "\033[1;33m~\033[0;39m")
	    gsub(/o/, "\033[1;33mo\033[0;39m")
	    }
         }
      print; }'
+ echo -e ' \033[1;33mo debug\033[0;39m is currently in C5 (Road)\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ read -sn 1 -p ' I want to go  (W) North  (A) West  (S)outh  (D) East  (Q)uit :  ' DEST
+ case "$DEST" in
+ echo -n 'You go East'
+ ((  MAP_X != 18  ))
+ ((  MAP_X++  ))
++ XYtoGPS 4 5
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=D5
+ Sleep 1.5
+ read -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=58
++ bc
+ MONTH=1
++ bc
+ DAY=28
++ bc
+ WEEKDAY=5
++ bc
+ MOON=4
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 29
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 29th
++ return 0
++ MonthString 2
++ echo Marrsuckur
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='29th of Marrsuckur in the 16th Cycle'
+ CheckForItem D5
+ ((  D5 < MAX_ITEMS  ))
+ CheckHotzones D5
++ grep -E '(^| )D5( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario D5
++ read -r MAP_X MAP_Y
+++ GPStoXY D5
+++ awk '{
          print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
          print substr($0, 2);
         }'
++ awk '{ if ( NR == 7) { print $6; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight .
+ RollDice 100
+ DICE_SIZE=100
+ DICE=17
+ [[ ! -n '' ]]
+ case "$1" in
+ RollForEvent 20 fight
+ echo -e 'Rolling for fight: D100 <= 20\nD100: 17'
+ Sleep 1.5
+ read -n 1 -t 1.5
+ ((  DICE <= 20  ))
+ return 0
+ FightMode
+ FightMode_ResetFlags
+ FIGHTMODE=1
+ NEXT_TURN=pl
+ LUCK=0
+ PICKPOCKET=0
+ FightMode_DefineEnemy
+ RollDice 100
+ DICE_SIZE=100
+ DICE=80
+ case "$SCENARIO" in
+ (( DICE <= 5  ))
+ (( DICE <= 10 ))
+ (( DICE <= 30 ))
+ (( DICE <= 60 ))
+ ENEMY=imp
+ case "$ENEMY" in
+ EN_STRENGTH=2
+ EN_ACCURACY=3
+ EN_FLEE=3
+ EN_HEALTH=20
+ EN_FLEE_THRESHOLD=10
+ EN_DEFEATED_EXP=10
+ PL_FLEE_EXP=2
+ EN_FLEE_EXP=5
+ case "$ENEMY" in
+ EN_GOLD=5
+ EN_TOBACCO=0
+ EN_FOOD=0
+ EN_PICKPOCKET_EXP=10
++ bc
+++ RollDice2 100
+++ RollDice 100
+++ DICE_SIZE=100
+++ DICE=47
+++ echo 47
+++ RollDice2 10
+++ RollDice 10
+++ DICE_SIZE=10
+++ DICE=3
+++ echo 3
+ EN_GOLD=0
++ bc
+++ RollDice2 100
+++ RollDice 100
+++ DICE_SIZE=100
+++ DICE=53
+++ echo 53
+++ RollDice2 10
+++ RollDice 10
+++ DICE_SIZE=10
+++ DICE=7
+++ echo 7
+ EN_TOBACCO=0
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=7
++ echo 7
+ ((  7 <= EN_FOOD  ))
+ FightMode_AddBonuses
+ HaveItem 4
+ ((  0 > 4  ))
+ return 1
+ HaveItem 5
+ ((  0 > 5  ))
+ return 1
+ FightMode_DefineInitiative
+ GX_Monster imp
+ clear
+ case "$1" in
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ Sleep 1
+ read -n 1 -t 1
+ ((  EN_ACCURACY > ACCURACY  ))
+ NEXT_TURN=en
+ ((  PLAYER_RESTING == 1  ))
+ echo 'The imp has initiative'
+ Sleep 2
+ read -n 1 -t 2
+ FightMode_RemoveBonuses
+ HaveItem 4
+ ((  0 > 4  ))
+ return 1
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=5
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp misses!' '[Accuracy:D6 3 < 5]'
+ echo -en '\e[1K\e[80DThe imp misses!'
++ Strlen '[Accuracy:D6 3 < 5]'
++ awk '{ print length($0); }'
+ tput hpa 59
+ echo -en '[Accuracy:D6 3 < 5]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=3
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 3]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 3]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 3]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=4
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp misses!' '[Accuracy:D6 3 < 4]'
+ echo -en '\e[1K\e[80DThe imp misses!'
++ Strlen '[Accuracy:D6 3 < 4]'
++ awk '{ print length($0); }'
+ tput hpa 59
+ echo -en '[Accuracy:D6 3 < 4]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=2
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 2]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 2]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 2]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=5
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp misses!' '[Accuracy:D6 3 < 5]'
+ echo -en '\e[1K\e[80DThe imp misses!'
++ Strlen '[Accuracy:D6 3 < 5]'
++ awk '{ print length($0); }'
+ tput hpa 59
+ echo -en '[Accuracy:D6 3 < 5]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=5
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 5]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 5]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 5]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=4
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp misses!' '[Accuracy:D6 3 < 4]'
+ echo -en '\e[1K\e[80DThe imp misses!'
++ Strlen '[Accuracy:D6 3 < 4]'
++ awk '{ print length($0); }'
+ tput hpa 59
+ echo -en '[Accuracy:D6 3 < 4]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=2
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 2]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 2]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 2]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 100 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=2
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp strikes you!' '[EnemyAccuracy:D6 3 >= 2]'
+ echo -en '\e[1K\e[80DThe imp strikes you!'
++ Strlen '[EnemyAccuracy:D6 3 >= 2]'
++ awk '{ print length($0); }'
+ tput hpa 53
+ echo -en '[EnemyAccuracy:D6 3 >= 2]'
+ RollDice 6
+ DICE_SIZE=6
+ DICE=1
+ DAMAGE=2
+ Echo '\nThe imp'\''s blow hits you with 2 points!' '[-2 HEALTH]'
+ echo -en '\nThe imp'\''s blow hits you with 2 points!'
++ Strlen '[-2 HEALTH]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-2 HEALTH]'
+ (( CHAR_HEALTH -= DAMAGE ))
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: debug
RACE: 
BATTLES: 0
EXPERIENCE: 0
LOCATION: D5
HEALTH: 98
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 
TOBACCO: 
FOOD: 13.00
BBSMSG: 0
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5458
INV_ALMANAC: 0'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 98 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=2
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 98 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 2]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 2]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 2]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 98 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=3
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp strikes you!' '[EnemyAccuracy:D6 3 >= 3]'
+ echo -en '\e[1K\e[80DThe imp strikes you!'
++ Strlen '[EnemyAccuracy:D6 3 >= 3]'
++ awk '{ print length($0); }'
+ tput hpa 53
+ echo -en '[EnemyAccuracy:D6 3 >= 3]'
+ RollDice 6
+ DICE_SIZE=6
+ DICE=4
+ DAMAGE=8
+ Echo '\nThe imp'\''s blow hits you with 8 points!' '[-8 HEALTH]'
+ echo -en '\nThe imp'\''s blow hits you with 8 points!'
++ Strlen '[-8 HEALTH]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-8 HEALTH]'
+ (( CHAR_HEALTH -= DAMAGE ))
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: debug
RACE: 
BATTLES: 0
EXPERIENCE: 0
LOCATION: D5
HEALTH: 90
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 
TOBACCO: 
FOOD: 13.00
BBSMSG: 0
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5458
INV_ALMANAC: 0'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 90 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=5
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 90 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 5]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 5]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 5]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 90 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=2
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp strikes you!' '[EnemyAccuracy:D6 3 >= 2]'
+ echo -en '\e[1K\e[80DThe imp strikes you!'
++ Strlen '[EnemyAccuracy:D6 3 >= 2]'
++ awk '{ print length($0); }'
+ tput hpa 53
+ echo -en '[EnemyAccuracy:D6 3 >= 2]'
+ RollDice 6
+ DICE_SIZE=6
+ DICE=1
+ DAMAGE=2
+ Echo '\nThe imp'\''s blow hits you with 2 points!' '[-2 HEALTH]'
+ echo -en '\nThe imp'\''s blow hits you with 2 points!'
++ Strlen '[-2 HEALTH]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-2 HEALTH]'
+ (( CHAR_HEALTH -= DAMAGE ))
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: debug
RACE: 
BATTLES: 0
EXPERIENCE: 0
LOCATION: D5
HEALTH: 88
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 
TOBACCO: 
FOOD: 13.00
BBSMSG: 0
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5458
INV_ALMANAC: 0'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 88 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=1
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 88 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 1]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 1]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 1]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 88 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=5
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp misses!' '[Accuracy:D6 3 < 5]'
+ echo -en '\e[1K\e[80DThe imp misses!'
++ Strlen '[Accuracy:D6 3 < 5]'
++ awk '{ print length($0); }'
+ tput hpa 59
+ echo -en '[Accuracy:D6 3 < 5]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 88 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=1
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 88 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 1]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 1]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 1]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 88 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=3
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp strikes you!' '[EnemyAccuracy:D6 3 >= 3]'
+ echo -en '\e[1K\e[80DThe imp strikes you!'
++ Strlen '[EnemyAccuracy:D6 3 >= 3]'
++ awk '{ print length($0); }'
+ tput hpa 53
+ echo -en '[EnemyAccuracy:D6 3 >= 3]'
+ RollDice 6
+ DICE_SIZE=6
+ DICE=6
+ DAMAGE=12
+ Echo '\nThe imp'\''s blow hits you with 12 points!' '[-12 HEALTH]'
+ echo -en '\nThe imp'\''s blow hits you with 12 points!'
++ Strlen '[-12 HEALTH]'
++ awk '{ print length($0); }'
+ tput hpa 66
+ echo -en '[-12 HEALTH]'
+ (( CHAR_HEALTH -= DAMAGE ))
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: debug
RACE: 
BATTLES: 0
EXPERIENCE: 0
LOCATION: D5
HEALTH: 76
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 
TOBACCO: 
FOOD: 13.00
BBSMSG: 0
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5458
INV_ALMANAC: 0'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 76 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo r
+ FIGHT_PROMPT=r
+ RollDice 6
+ DICE_SIZE=6
+ DICE=1
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 76 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ case "$FIGHT_PROMPT" in
+ ((  DICE <= ACCURACY  ))
+ Echo 'You missed!' '[Accuracy:D6 Accuracy < 1]'
+ echo -en 'You missed!'
++ Strlen '[Accuracy:D6 Accuracy < 1]'
++ awk '{ print length($0); }'
+ tput hpa 52
+ echo -en '[Accuracy:D6 Accuracy < 1]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ pl == \p\l ]]
+ NEXT_TURN=en
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 76 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ en == \p\l ]]
+ FightMode_EnemyTurn
+ echo -n 'It'\''s the imp'\''s turn:'
+ Sleep 2
+ read -n 1 -t 2
+ ((  EN_HEALTH < EN_FLEE_THRESHOLD  ))
+ RollDice 6
+ DICE_SIZE=6
+ DICE=4
+ ((  DICE <= EN_ACCURACY  ))
+ Echo '\e[1K\e[80DThe imp misses!' '[Accuracy:D6 3 < 4]'
+ echo -en '\e[1K\e[80DThe imp misses!'
++ Strlen '[Accuracy:D6 3 < 4]'
++ awk '{ print length($0); }'
+ tput hpa 59
+ echo -en '[Accuracy:D6 3 < 4]'
+ (( CHAR_HEALTH <= 0 || EN_HEALTH <= 0 ))
+ [[ en == \p\l ]]
+ NEXT_TURN=pl
+ Sleep 2
+ read -n 1 -t 2
+ (( FIGHTMODE ))
+ FightMode_FightTable
+ tput rc
+ tput ed
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n' Debug 76 Strength Accuracy
++ Capitalize imp
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ printf '%-12.12s\t\tHEALTH: %s\tStrength: %s\tAccuracy: %s\n\n' Imp 20 2 3
+ [[ pl == \p\l ]]
+ FightMode_CharTurn
+ local FIGHT_PROMPT
+ echo -n 'It'\''s your turn, press any key to (R)oll or (F) to Flee'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
+ FIGHT_PROMPT=
++ CleanUp
++ GX_BiaminTitle
++ clear
++ cat
++ echo -e '\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
++ (( FIGHTMODE ))
++ (( CHAR_HEALTH -= 20 ))
++ (( CHAR_EXP -= 20 ))
++ echo -e 'PENALTY for CTRL+Chickening out during battle: -20 HP -20 EXP\nHEALTH: 56\tEXPERIENCE: -20'
++ [[ -n debug ]]
++ SaveCurrentSheet
++ echo 'VERSION: 1.9
CHARACTER: debug
RACE: 
BATTLES: 0
EXPERIENCE: -20
LOCATION: D5
HEALTH: 56
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 
TOBACCO: 
FOOD: 13.00
BBSMSG: 0
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5458
INV_ALMANAC: 0'
++ echo -e '\nLeaving the realm of magic behind ....\nPlease submit bugs and feedback at <http://sigg3.net/biamin/>'
++ Exit 0
++ tput cnorm
++ [[ -n 0 ]]
++ exit 0
