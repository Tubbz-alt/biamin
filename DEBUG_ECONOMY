+ VERSION=1.9
+ WEBURL=http://sigg3.net/biamin
+ REPO=http://sigg3.net/biamin/dir/to/latest/biamin.sh
+ GAMEDIR=/home/sigg3/.biamin
+ CONFIG=/home/sigg3/.biamin/config
+ HIGHSCORE=/home/sigg3/.biamin/highscore
+ unset HISTFILE
+ START_LOCATION=C2
+ DISABLE_CHEATS=0
+ HR='- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MAX_BBSMSG=12
+ declare -r MONTH_LENGTH=30
+ declare -r YEAR_MONTHES=12
+ declare -r YEAR_LENGHT=360
+ declare -r MOON_PHASE_LENGTH=4
+ declare -r MOON_CYCLE=32
+ MOON_STR=("New Moon" "Growing Crescent" "First Quarter" "Growing Gibbous" "Full Moon" "Waning Gibbous" "Third Quarter" "Waning Crescent")
+ declare -r MOON_STR
+ MONTH_STR=("Biamin Festival" "Rarely happens, if ever :(" "After-Frost" "1st Month of the Year\n This is the coldest and darkest month of the year. Stay in, stay warm." "Marrsuckur" "2nd Month of the Year\n \"Marrow-sucker\" is a lean month. Some nobles have a custom of fasting." "Plough-Tide" "3rd Month of the Year\n Farmers return to their ploughs. Hobbit villages celebrate Springtide." "Anorlukis" "4th Month of the Year\n The winter darkness is overwon by Anor's arrows. Holy month for Elves." "Summer-Tide" "5th Month of the Year\n Middle of year. While the heat is welcoming, watch out for orcs and goblins!" "Summer-Turn" "6th Month of the Year\n A celebration of the Turn of Anor, in which one gives thanks for any good." "Merentimes" "7th Month of the Year\n From 'Meren' (happiness). This warm month is oft celebrated by travellers." "Harvest Month" "8th Month of the Year\n Autumn is the busiest time of year. And evil grows in the wilderness." "Ringorin" "9th Month of the Year\n From 'Ringorn' (circle, life, produce). Holy month for farmers." "Brew-Tasting Tide" "10th Month of the Year\n Traditional tasting of ales begin this month. Don't venture about alone." "Winter Month" "11th Month of the Year\n By now the stocks are full of produce. Livestock & people shelter in." "Midwinter Offering" "12th Month of the Year\n The Offering is a significant and holy event for priests and people alike.")
+ declare -r -a MONTH_STR
+ declare -r WEEK_LENGTH=7
+ WEEKDAY_STR=("Ringday (Holiday)" "Day of Festivities and Rest" "Men and Halflings celebrate Ringday as the end and beginning of the week." "Moonday" "Mor's Day (Day of the Moon)" "Elves and Dwarves once celebrated Moon Day as the holiest. Some still do." "Brenday" "Brenia's Day (God of Courage)" "Visit the Temple on Brenia's Day to honor those who perished in warfare." "Midweek" "Middle of the Week (Day of Balance)" "In some places, Midweek Eve is celebrated with village dances and ale." "Braigday" "Braig's Day (God of Wilderness)" "Historically, a day of hunting. Nobility still hunt every Braig's Day." "Melethday" "Melethril's Day (God of Love)" "Commonly considered Lovers' Day, it is also a day of mischief and trickery." "Washday" "Final Workday of the Week" "Folk name for Lanthir's Day, the God of Water, Springs and Waterfalls.")
+ declare -r -a WEEKDAY_STR
+ CALENDAR=()
+ declare -r DEATH_FIGHT=0
+ declare -r DEATH_STARVATION=1
+ declare -r BANDIT=0
+ declare -r IMP=1
+ declare -r GOBLIN=2
+ declare -r BOAR=3
+ declare -r ORC=4
+ declare -r VARG=5
+ declare -r MAGE=6
+ declare -r DRAGON=7
+ declare -r CHTHULU=8
+ declare -r BEAR=9
+ ENEMIES=("bandit  1        4        7     30    18             20 20   10        0   15" "imp     2        3        3     20    10             10  5    0        0   10" "goblin  3        3        5     30    15             30 10   20        0   20" "boar    4        2        3     60    35             40  0    0      100    0" "orc     4        4        4     80    40             50 15   25        0   35" "varg    4        3        3     80    60            100  0    0       70    0" "mage    5        3        4     90    45            150 50   60        0  100" "dragon  5        3        2    150    50            180 30    0       30  100" "chthulu 6        5        1    500    35           1000  0    0       90   40" "bear    6        2        4    160    25             60  0    0      100    0")
+ declare -ra ENEMIES
+ declare -r GIFT_OF_SIGHT=0
+ declare -r EMERALD_OF_NARCOLEPSY=1
+ declare -r GUARDIAN_ANGEL=2
+ declare -r FAST_MAGIC_BOOTS=3
+ declare -r QUICK_RABBIT_REACTION=4
+ declare -r FLASK_OF_TERRIBLE_ODOUR=5
+ declare -r TWO_HANDED_BROADSWORD=6
+ declare -r STEADY_HAND_BREW=7
+ declare -r MAX_ITEMS=8
+ DICE_GAME_CHANCES=(0 1 3 6 9 12 14 17 14 12 9 6 3)
+ declare -r -a DICE_GAME_CHANCES
+ DICE_GAME_WINNINGS=(0 1 100 85 70 55 40 25 40 55 70 85 100)
+ declare -r -a DICE_GAME_WINNINGS
+ RACES=("Race   Healing Strength Accuracy Flee Offset_Gold Offset_Tobacco" "human  3       3        3        3    12           8" "elf    4       3        4        1     8          12" "dwarf  2       5        3        2    14           6" "hobbit 4       1        4        3     6          14")
+ declare -r -a RACES
+ declare -r MAX_RACES=4
+ declare -r INITIAL_VALUE_GOLD=1
+ declare -r INITIAL_VALUE_TOBACCO=1
+ declare -r INITIAL_VALUE_CHANGE=0.15
+ [[ ! -d /home/sigg3/.biamin ]]
+ [[ ! -f /home/sigg3/.biamin/config ]]
+ [[ -f /home/sigg3/.biamin/highscore ]]
+ grep -q d41d8cd98f00b204e9800998ecf8427e /home/sigg3/.biamin/highscore
+ [[ ! -n '' ]]
+ for PAGER in less more
++ which less
+ PAGER=/usr/bin/less
+ [[ -n /usr/bin/less ]]
+ break
+ CLI_ParseArguments -p
+ [[ ! -n -p ]]
+ [[ -n -p ]]
+ case "$1" in
+ [[ -n '' ]]
+ echo 'Launching Back in a Minute..'
+ shift
+ [[ -n '' ]]
+ echo 'Putting on the traveller'\''s boots..'
+ read -r GAMEDIR COLOR
++ awk '{ if (/^GAMEDIR:/)  { GAMEDIR= $2 }
                                   if (/^COLOR:/)    { COLOR = $2  } }
                            END { print GAMEDIR, COLOR ;}' /home/sigg3/.biamin/config
+ CheckBiaminDependencies
+ declare -a CRITICAL NONCRITICAL
+ local PROGRAM
+ echo 'Checking dependencies...'
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled tput
++ which tput
+ [[ -n /usr/bin/tput ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled awk
++ which awk
+ [[ -n /usr/bin/awk ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled bc
++ which bc
+ [[ -n /usr/bin/bc ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled sed
++ which sed
+ [[ -n /usr/bin/sed ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled printf
++ which printf
+ [[ -n /usr/bin/printf ]]
+ return 0
+ for PROGRAM in '"tput"' '"awk"' '"bc"' '"sed"' '"printf"' '"date"'
+ IsInstalled date
++ which date
+ [[ -n /usr/bin/date ]]
+ return 0
+ for PROGRAM in '"curl"' '"wget"'
+ IsInstalled curl
++ which curl
+ [[ -n /usr/bin/curl ]]
+ return 0
+ for PROGRAM in '"curl"' '"wget"'
+ IsInstalled wget
++ which wget
+ [[ -n /usr/bin/wget ]]
+ return 0
+ [[ -n '' ]]
+ [[ -n '' ]]
++ tput cols
++ tput lines
+ ((  80 > 79 && 24 > 23 ))
+ unset CRITICAL NONCRITICAL PROGRAM
+ ColorConfig 1
+ case "$1" in
+ echo 'Enabling color for maps!'
+ (( COLOR == 1 ))
+ declare -gr 'YELLOW=\033[1;33m'
+ declare -gr 'RESET=\033[0;39m'
+ declare -gr 'CLEAR_LINE=\e[1K\e[80D'
+ ReseedRandom
+ [[ -n '' ]]
+ case "$OSTYPE" in
++ date +%N
+ RANDOM=400685381
+ trap CleanUp SIGHUP SIGINT SIGTERM
+ tput civis
+ [[ -n '' ]]
+ MainMenu
+ [[ ! -n '' ]]
+ GX_Banner
+ GX_BiaminTitle
+ clear
+ cat
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(P)lay;(L)oad game;(H)ighscore;(C)redits;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo p
+ ReadLine '\e[1K\e[80D Enter character name (case sensitive): '
+ [[ -n \e[1K\e[80D Enter character name (case sensitive):  ]]
+ echo -en '\e[1K\e[80D Enter character name (case sensitive): '
+ read -s -t 0.01 -n 512
+ tput cnorm
+ read
+ tput civis
+ CHAR=Tristan
+ [[ ! -n Tristan ]]
+ BiaminSetup
+ BiaminSetup_MakeBaseChar
+ CHAR_BATTLES=0
+ CHAR_EXP=0
+ CHAR_GPS=C2
+ CHAR_HEALTH=100
+ CHAR_ITEMS=0
+ CHAR_KILLS=0
+ CHAR_HOME=C2
++ bc
+++ RollDice2 11
+++ RollDice 11
+++ DICE_SIZE=11
+++ DICE=2
+++ echo 2
+ CHAR_FOOD=6
+ BBSMSG=0
+ VAL_GOLD=1
+ VAL_TOBACCO=1
+ VAL_CHANGE=0.15
+ STARVATION=0
++ TurnFromDate
++ local YEAR MONTH DAY
++ read -r YEAR MONTH DAY
+++ date '+%-y %-m %-d'
++ bc
+ TURN=5596
+ INV_ALMANAC=0
++ echo Tristan
++ tr '[:upper:]' '[:lower:]'
++ tr -d ' '
+ CHARSHEET=/home/sigg3/.biamin/tristan.sheet
+ [[ -f /home/sigg3/.biamin/tristan.sheet ]]
+ BiaminSetup_MakeNewChar
+ echo ' Tristan is a new character!'
+ GX_Races
+ clear
+ cat
+ echo -n ' Select character race (1-4): '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo 1
+ CHAR_RACE=1
+ [[ 1 != [1-4] ]]
+ BiaminSetup_SetRaceAbilities 1
+ read -r CHAR_RACE_STR HEALING STRENGTH ACCURACY FLEE OFFSET_GOLD OFFSET_TOBACCO
++ Toupper human
++ awk '{ print toupper($0); }'
+ echo 'You chose to be a HUMAN'
++ RollDice2 12
++ RollDice 12
++ DICE_SIZE=12
++ DICE=8
++ echo 8
+ CHAR_GOLD=8
++ RollDice2 8
++ RollDice 8
++ DICE_SIZE=8
++ DICE=7
++ echo 7
+ CHAR_TOBACCO=7
+ [[ -n '' ]]
+ echo ' Creating fresh character sheet for Tristan ...'
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: Tristan
RACE: 1
BATTLES: 0
EXPERIENCE: 0
LOCATION: C2
HEALTH: 100
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 8
TOBACCO: 7
FOOD: 6
BBSMSG: 0
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5596
INV_ALMANAC: 0'
+ Sleep 2
+ read -s -n 1 -t 2
+ Intro
+ MapCreate
+ MAPS=($(find "$GAMEDIR"/ -name '*.map' | sort))
++ find /home/sigg3/.biamin/ -name '*.map'
++ sort
+ [[ -n /home/sigg3/.biamin/diffway.map /home/sigg3/.biamin/testing.map ]]
+ echo -en '\n Custom maps found in /home/sigg3/.biamin\n Would you like to play a (C)ustom map or the (D)efault? '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo d
+ [[ d == [Cc] ]]
++ cat
+ MAP='       A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R
   #=========================================================================#
 1 )   x   x   x   x   x   @   .   .   .   T   x   x   x   x   x   x   @   T (
 2 )   x   x   H   x   @   @   .   @   @   x   x   x   x   x   @   @   @   @ (
 3 )   @   @   .   @   @   @   .   x   x   x   x   x   @   x   @   x   @   @ (
 4 )   @   @   .   @   @   @   .   @   x   x   x   @   T   x   x   x   x   x (
 5 )   @   @   .   .   T   .   .   @   @   @   @   @   .   @   x   x   x   x (
 6 )   @   @   @   @   .   @   @   @   @   @   @   @   .   @   @   x   x   x (
 7 )   @   @   @   @   .   .   .   T   @   @   @   @   .   @   @   x   x   x (
 8 )   @   @   T   .   .   @   @   @   @   @   @   .   .   .   .   .   .   x (
 9 )   @   @   .   @   @   @   @   @   @   @   .   .   @   x   @   @   .   . (
10 )   @   @   .   @   @   @   T   @   @   @   .   @   @   x   x   x   x   . (
11 )   T   .   .   .   .   .   .   .   @   @   .   x   x   C   x   x   x   . (
12 )   x   @   @   @   .   @   @   .   .   .   .   x   x   x   x   x   x   . (
13 )   x   x   @   x   .   @   @   @   @   @   .   @   x   x   @   @   @   . (
14 )   x   x   x   x   .   @   @   @   @   T   .   @   x   x   @   @   .   . (
15 )   x   x   x   T   .   @   @   @   @   @   @   @   @   T   .   .   .   @ (
   #=========================================================================#
          LEGEND: x = Mountain, . = Road, T = Town, @ = Forest         N
                  H = Home (Heal Your Wounds) C = Oldburg Castle     W + E
                                                                       S'
+ HotzonesDistribute 0
+ local ITEMS_2_SCATTER=8
+ HOTZONE=()
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=10
+++ echo 10
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=7
+++ echo 7
++ XYtoGPS 10 7
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=J7
+ [[ J7 == \C\2 ]]
+ CheckHotzones J7
++ grep -E '(^| )J7( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=J7
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=1
+++ echo 1
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=4
+++ echo 4
++ XYtoGPS 1 4
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=A4
+ [[ A4 == \C\2 ]]
+ CheckHotzones A4
++ grep -E '(^| )A4( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=A4
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=5
+++ echo 5
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=14
+++ echo 14
++ XYtoGPS 5 14
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=E14
+ [[ E14 == \C\2 ]]
+ CheckHotzones E14
++ grep -E '(^| )E14( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=E14
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=3
+++ echo 3
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=5
+++ echo 5
++ XYtoGPS 3 5
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=C5
+ [[ C5 == \C\2 ]]
+ CheckHotzones C5
++ grep -E '(^| )C5( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=C5
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=15
+++ echo 15
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=10
+++ echo 10
++ XYtoGPS 15 10
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=O10
+ [[ O10 == \C\2 ]]
+ CheckHotzones O10
++ grep -E '(^| )O10( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=O10
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=3
+++ echo 3
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=13
+++ echo 13
++ XYtoGPS 3 13
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=C13
+ [[ C13 == \C\2 ]]
+ CheckHotzones C13
++ grep -E '(^| )C13( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=C13
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=18
+++ echo 18
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=10
+++ echo 10
++ XYtoGPS 18 10
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=R10
+ [[ R10 == \C\2 ]]
+ CheckHotzones R10
++ grep -E '(^| )R10( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=R10
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=13
+++ echo 13
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=10
+++ echo 10
++ XYtoGPS 13 10
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=M10
+ [[ M10 == \C\2 ]]
+ CheckHotzones M10
++ grep -E '(^| )M10( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=M10
+ (( ITEMS_2_SCATTER > 0 ))
+ WORLDCHANGE_COUNTDOWN=0
+ WorldPriceFixing
+ local VAL_FOOD=1
++ bc
+ PRICE_FxG=1.00
++ bc
+ PRICE_FxT=1.00
++ bc
+ PRICE_GxT=1.00
++ bc
+ PRICE_GxF=1.00
++ bc
+ PRICE_TxG=1.00
++ bc
+ PRICE_TxF=1.00
+ GX_Intro 60
+ clear
+ cat
+ local COUNTDOWN=60
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n '                         Press (A)ny key to continue..'
+ tput sc
+ (( COUNTDOWN-- ))
+ tput rc
+ (( COUNTDOWN % 2 ))
+ echo -n .
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ tput rc
+ (( COUNTDOWN % 2 ))
+ echo -n ' '
+ read -sn 1 -t 1
+ break
+ NODICE=1
+ GiveUsDebugInfo 'Default Pricing Scheme' 0
+ echo '        DEBUG       Default Pricing Scheme'
+ echo '        DEBUG       '
+ echo '        DEBUG       BBSMSG:		0'
+ echo '        DEBUG       '
+ echo '        DEBUG       $PRICE_FxG:	1.00'
+ echo '        DEBUG       $PRICE_FxT:	1.00'
+ echo '        DEBUG       $PRICE_GxT:	1.00'
+ echo '        DEBUG       $PRICE_GxF:	1.00'
+ echo '        DEBUG       $PRICE_TxG:	1.00'
+ echo '        DEBUG       $PRICE_TxF:	1.00'
+ NewSector
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=197
++ bc
+ MONTH=6
++ bc
+ DAY=17
++ bc
+ WEEKDAY=4
++ bc
+ MOON=7
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 18
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 18th
++ return 0
++ MonthString 7
++ echo Merentimes
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='18th of Merentimes in the 16th Cycle'
+ CheckForItem C2
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ CheckHotzones C2
++ grep -E '(^| )C2( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C2
++ read -r MAP_X MAP_Y
+++ GPStoXY C2
+++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
++ awk '{ if ( NR == 4) { print $5; }}'
+ SCENARIO=H
+ GX_Place H
+ clear
+ case "$1" in
+ PLACE=Home
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n 1 ]]
+ unset NODICE
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=5.75
+ Echo 'You eat from your stock: 5.75 remaining ..' '[-.25 FOOD]'
+ echo -en 'You eat from your stock: 5.75 remaining ..'
++ Strlen '[-.25 FOOD]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-.25 FOOD]'
+ echo
+ (( STARVATION ))
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=34
++ echo 34
+ ((  34 > 15  ))
+ return 0
+ true
+ GX_Place H
+ clear
+ case "$1" in
+ PLACE=Home
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter     (B)ulletin     (R)est     (M)ap and Travel     (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ local ACTION=m
+ case "$ACTION" in
+ MapNav m
+ local DEST
+ read -r MAP_X MAP_Y
++ GPStoXY C2
++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
+ case "$1" in
+ GX_Map
+ local ITEM2C_Y=0 ITEM2C_X=0
+ HaveItem 0
+ (( CHAR_ITEMS > 0 ))
+ return 1
+ clear
++ printf %s '\033[0;39m'
++ printf %s '\033[1;33m~\033[0;39m'
++ printf %s '\033[1;33mo\033[0;39m'
+ awk 'BEGIN { FS = "   " ; OFS = "   "; }
    { # place "o" (player) on map
      if (NR == 4) {  # lazy fix for ASCII borders
         if (3 == 18 ) { $4="o ("; }
         else                 { $4="o";   }
         }
      # if player has Gift-Of-Sight and not all items are found
      if ( 0 > 0 && 0 < 8) {
         # place ITEM2C on map
         # ITEM2C_Y+2 and ITEM2C_X+1 - fix for boards
 	 if (NR == 2) {
            if ( 0 == 18 ) { $1="~ ("; }
            else                     { $1="~";   }
            }
         }
      # All color on map sets here
      if (1 == 1 ) {
         # Terminal color scheme bugfix
         if ( NR == 1 ) { gsub(/^/, "\033[0;39m"); }
         # colorise "o" (player) and "~" (ITEM2C)
	 if ( NR > 2 && NR < 19 ) {
 	    gsub(/~/, "\033[1;33m~\033[0;39m")
	    gsub(/o/, "\033[1;33mo\033[0;39m")
	    }
         }
      print; }'
+ echo -e ' \033[1;33mo Tristan\033[0;39m is currently in C2 (Home)\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n ' I want to go  (W) North  (A) West  (S)outh  (D) East  (Q)uit :  '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo s
+ DEST=s
+ case "$DEST" in
+ echo -n 'You go South'
+ (( MAP_Y != 15 ))
+ (( MAP_Y++ ))
++ XYtoGPS 3 3
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=C3
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=198
++ bc
+ MONTH=6
++ bc
+ DAY=18
++ bc
+ WEEKDAY=5
++ bc
+ MOON=7
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 19
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 19th
++ return 0
++ MonthString 7
++ echo Merentimes
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='19th of Merentimes in the 16th Cycle'
+ CheckForItem C3
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ CheckHotzones C3
++ grep -E '(^| )C3( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C3
++ read -r MAP_X MAP_Y
+++ GPStoXY C3
+++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
++ awk '{ if ( NR == 5) { print $5; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight .
+ local CHANCE
+ [[ ! -n '' ]]
+ case "$1" in
+ CHANCE=20
+ RollDice 100
+ DICE_SIZE=100
+ DICE=64
+ RollForEvent 20 event
+ ((  DICE <= 20  ))
+ Echo '\e[1K\e[80DRolling for event:' '[D100 64 > 20]'
+ echo -en '\e[1K\e[80DRolling for event:'
++ Strlen '[D100 64 > 20]'
++ awk '{ print length($0); }'
+ tput hpa 64
+ echo -en '[D100 64 > 20]'
+ echo
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ return 1
+ return 0
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=5.50
+ Echo 'You eat from your stock: 5.50 remaining ..' '[-.25 FOOD]'
+ echo -en 'You eat from your stock: 5.50 remaining ..'
++ Strlen '[-.25 FOOD]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-.25 FOOD]'
+ echo
+ (( STARVATION ))
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
++ RollDice2 100
++ RollDice 100
++ DICE_SIZE=100
++ DICE=12
++ echo 12
+ ((  12 > 15  ))
++ RollDice2 12
++ RollDice 12
++ DICE_SIZE=12
++ DICE=4
++ echo 4
+ BBSMSG=4
+ case "$BBSMSG" in
+ local CHANGE=-
+ declare -n CURRENCY=VAL_TOBACCO
biamin.sh: line 1957: declare: -n: invalid option
declare: usage: declare [-aAfFgilrtux] [-p] [name[=value] ...]
+ RollDice 5
+ DICE_SIZE=5
+ DICE=4
++ bc
+ CURRENCY=.25
+ unset -n CURRENCY
biamin.sh: line 1969: unset: -n: invalid option
unset: usage: unset [-f] [-v] [name ...]
+ WORLDCHANGE_COUNTDOWN=20
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: Tristan
RACE: 1
BATTLES: 0
EXPERIENCE: 0
LOCATION: C3
HEALTH: 100
ITEMS: 0
KILLS: 0
HOME: C2
GOLD: 8
TOBACCO: 7
FOOD: 5.50
BBSMSG: 4
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5598
INV_ALMANAC: 0'
+ WorldPriceFixing
+ local VAL_FOOD=1
++ bc
+ PRICE_FxG=1.00
++ bc
+ PRICE_FxT=1.00
++ bc
+ PRICE_GxT=1.00
++ bc
+ PRICE_GxF=1.00
++ bc
+ PRICE_TxG=1.00
++ bc
+ PRICE_TxF=1.00
+ GiveUsDebugInfo 'Changes in WorldChangeEconomy()' 4
+ echo '        DEBUG       Changes in WorldChangeEconomy()'
+ echo '        DEBUG       '
+ echo '        DEBUG       BBSMSG:		4'
+ echo '        DEBUG       '
+ echo '        DEBUG       $PRICE_FxG:	1.00'
+ echo '        DEBUG       $PRICE_FxT:	1.00'
+ echo '        DEBUG       $PRICE_GxT:	1.00'
+ echo '        DEBUG       $PRICE_GxF:	1.00'
+ echo '        DEBUG       $PRICE_TxG:	1.00'
+ echo '        DEBUG       $PRICE_TxF:	1.00'
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo c
+ local ACTION=c
+ case "$ACTION" in
+ DisplayCharsheet
++ bc
+ local MURDERSCORE=0
++ Capitalize human
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ local RACE=Human
+ local 'CHARSHEET_INV_STR=8 Gold, 7 Tobacco, 5.50 Food'
+ ((  INV_ALMANAC == 1  ))
+ GX_CharSheet
+ clear
+ cat
+ tput sc
+ case "$1" in
+ MvAddStr 3 11 'C  H  A  R  A  C  T  E  R     S  H E  E  T'
+ tput cup 3 11
+ printf %s 'C  H  A  R  A  C  T  E  R     S  H E  E  T'
+ MvAddStr 5 11 '            s t a t i s t i c s           '
+ tput cup 5 11
+ printf %s '            s t a t i s t i c s           '
+ tput rc
+ cat
+ case "$INV_ALMANAC" in
+ MakePrompt '(D)isplay Race Info;(A)ny key to continue;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo a
+ (( INV_ALMANAC ))
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ local ACTION=m
+ case "$ACTION" in
+ MapNav m
+ local DEST
+ read -r MAP_X MAP_Y
++ GPStoXY C3
++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
+ case "$1" in
+ GX_Map
+ local ITEM2C_Y=0 ITEM2C_X=0
+ HaveItem 0
+ (( CHAR_ITEMS > 0 ))
+ return 1
+ clear
++ printf %s '\033[0;39m'
++ printf %s '\033[1;33m~\033[0;39m'
++ printf %s '\033[1;33mo\033[0;39m'
+ awk 'BEGIN { FS = "   " ; OFS = "   "; }
    { # place "o" (player) on map
      if (NR == 5) {  # lazy fix for ASCII borders
         if (3 == 18 ) { $4="o ("; }
         else                 { $4="o";   }
         }
      # if player has Gift-Of-Sight and not all items are found
      if ( 0 > 0 && 0 < 8) {
         # place ITEM2C on map
         # ITEM2C_Y+2 and ITEM2C_X+1 - fix for boards
 	 if (NR == 2) {
            if ( 0 == 18 ) { $1="~ ("; }
            else                     { $1="~";   }
            }
         }
      # All color on map sets here
      if (1 == 1 ) {
         # Terminal color scheme bugfix
         if ( NR == 1 ) { gsub(/^/, "\033[0;39m"); }
         # colorise "o" (player) and "~" (ITEM2C)
	 if ( NR > 2 && NR < 19 ) {
 	    gsub(/~/, "\033[1;33m~\033[0;39m")
	    gsub(/o/, "\033[1;33mo\033[0;39m")
	    }
         }
      print; }'
+ echo -e ' \033[1;33mo Tristan\033[0;39m is currently in C3 (Road)\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n ' I want to go  (W) North  (A) West  (S)outh  (D) East  (Q)uit :  '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo s
+ DEST=s
+ case "$DEST" in
+ echo -n 'You go South'
+ (( MAP_Y != 15 ))
+ (( MAP_Y++ ))
++ XYtoGPS 3 4
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=C4
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=199
++ bc
+ MONTH=6
++ bc
+ DAY=19
++ bc
+ WEEKDAY=6
++ bc
+ MOON=7
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 20
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 20th
++ return 0
++ MonthString 7
++ echo Merentimes
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='20th of Merentimes in the 16th Cycle'
+ CheckForItem C4
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ CheckHotzones C4
++ grep -E '(^| )C4( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario C4
++ read -r MAP_X MAP_Y
+++ GPStoXY C4
+++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
++ awk '{ if ( NR == 6) { print $5; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight .
+ local CHANCE
+ [[ ! -n '' ]]
+ case "$1" in
+ CHANCE=20
+ RollDice 100
+ DICE_SIZE=100
+ DICE=86
+ RollForEvent 20 event
+ ((  DICE <= 20  ))
+ Echo '\e[1K\e[80DRolling for event:' '[D100 86 > 20]'
+ echo -en '\e[1K\e[80DRolling for event:'
++ Strlen '[D100 86 > 20]'
++ awk '{ print length($0); }'
+ tput hpa 64
+ echo -en '[D100 86 > 20]'
+ echo
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ return 1
+ return 0
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=5.25
+ Echo 'You eat from your stock: 5.25 remaining ..' '[-.25 FOOD]'
+ echo -en 'You eat from your stock: 5.25 remaining ..'
++ Strlen '[-.25 FOOD]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-.25 FOOD]'
+ echo
+ (( STARVATION ))
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
+ return 0
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo s
+ local ACTION=s
+ case "$ACTION" in
+ MapNav s
+ local DEST
+ read -r MAP_X MAP_Y
++ GPStoXY C4
++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
+ case "$1" in
+ DEST=s
+ echo -en '\e[1K\e[80D'
+ case "$DEST" in
+ echo -n 'You go South'
+ (( MAP_Y != 15 ))
+ (( MAP_Y++ ))
++ XYtoGPS 3 5
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=C5
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=200
++ bc
+ MONTH=6
++ bc
+ DAY=20
++ bc
+ WEEKDAY=0
++ bc
+ MOON=0
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 21
++ grep -Eq '^([0-9]*[^1])?1$'
++ echo 21st
++ return 0
++ MonthString 7
++ echo Merentimes
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='21st of Merentimes in the 16th Cycle'
+ CheckForItem C5
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ CheckHotzones C5
++ grep -E '(^| )C5( |$)'
+ [[ -n M10 R10 C13 O10 C5 E14 A4 J7 ]]
+ return 0
+ ItemWasFound
+ GX_Item 0
+ clear
+ case "$1" in
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$CHAR_ITEMS" in
+ local COUNTDOWN=180
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (180)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (179)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (178)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (177)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (176)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (175)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (174)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (173)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (172)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (171)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (170)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (169)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (168)'
+ read -sn 1 -t 1
+ (( COUNTDOWN-- ))
+ ((  COUNTDOWN > 0  ))
+ echo -en '\e[1K\e[80D                      Press any letter to continue  (167)'
+ read -sn 1 -t 1
+ break
+ (( ++CHAR_ITEMS ))
+ HotzonesDistribute 1
+ local ITEMS_2_SCATTER=7
+ HOTZONE=()
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=9
+++ echo 9
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=11
+++ echo 11
++ XYtoGPS 9 11
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=I11
+ [[ I11 == \C\5 ]]
+ CheckHotzones I11
++ grep -E '(^| )I11( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=I11
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=3
+++ echo 3
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=6
+++ echo 6
++ XYtoGPS 3 6
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=C6
+ [[ C6 == \C\5 ]]
+ CheckHotzones C6
++ grep -E '(^| )C6( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=C6
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=10
+++ echo 10
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=8
+++ echo 8
++ XYtoGPS 10 8
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=J8
+ [[ J8 == \C\5 ]]
+ CheckHotzones J8
++ grep -E '(^| )J8( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=J8
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=3
+++ echo 3
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=12
+++ echo 12
++ XYtoGPS 3 12
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=C12
+ [[ C12 == \C\5 ]]
+ CheckHotzones C12
++ grep -E '(^| )C12( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=C12
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=14
+++ echo 14
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=14
+++ echo 14
++ XYtoGPS 14 14
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=N14
+ [[ N14 == \C\5 ]]
+ CheckHotzones N14
++ grep -E '(^| )N14( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=N14
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=6
+++ echo 6
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=10
+++ echo 10
++ XYtoGPS 6 10
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=F10
+ [[ F10 == \C\5 ]]
+ CheckHotzones F10
++ grep -E '(^| )F10( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=F10
+ (( ITEMS_2_SCATTER > 0 ))
+++ RollDice2 18
+++ RollDice 18
+++ DICE_SIZE=18
+++ DICE=8
+++ echo 8
+++ RollDice2 15
+++ RollDice 15
+++ DICE_SIZE=15
+++ DICE=9
+++ echo 9
++ XYtoGPS 8 9
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ local ITEM_GPS=H9
+ [[ H9 == \C\5 ]]
+ CheckHotzones H9
++ grep -E '(^| )H9( |$)'
+ [[ -n '' ]]
+ return 1
+ (( ITEMS_2_SCATTER-- ))
+ HOTZONE["$ITEMS_2_SCATTER"]=H9
+ (( ITEMS_2_SCATTER > 0 ))
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: Tristan
RACE: 1
BATTLES: 0
EXPERIENCE: 0
LOCATION: C5
HEALTH: 100
ITEMS: 1
KILLS: 0
HOME: C2
GOLD: 8
TOBACCO: 7
FOOD: 5.25
BBSMSG: 4
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5600
INV_ALMANAC: 0'
+ NODICE=1
++ NewSector_GetScenario C5
++ read -r MAP_X MAP_Y
+++ GPStoXY C5
+++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
++ awk '{ if ( NR == 7) { print $5; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n 1 ]]
+ unset NODICE
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=5.00
+ Echo 'You eat from your stock: 5.00 remaining ..' '[-.25 FOOD]'
+ echo -en 'You eat from your stock: 5.00 remaining ..'
++ Strlen '[-.25 FOOD]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-.25 FOOD]'
+ echo
+ (( STARVATION ))
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
+ return 0
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo c
+ local ACTION=c
+ case "$ACTION" in
+ DisplayCharsheet
++ bc
+ local MURDERSCORE=0
++ Capitalize human
++ awk '{ print substr(toupper($0), 1,1) substr($0, 2); }'
+ local RACE=Human
+ local 'CHARSHEET_INV_STR=8 Gold, 7 Tobacco, 5.00 Food'
+ ((  INV_ALMANAC == 1  ))
+ GX_CharSheet
+ clear
+ cat
+ tput sc
+ case "$1" in
+ MvAddStr 3 11 'C  H  A  R  A  C  T  E  R     S  H E  E  T'
+ tput cup 3 11
+ printf %s 'C  H  A  R  A  C  T  E  R     S  H E  E  T'
+ MvAddStr 5 11 '            s t a t i s t i c s           '
+ tput cup 5 11
+ printf %s '            s t a t i s t i c s           '
+ tput rc
+ cat
+ case "$INV_ALMANAC" in
+ MakePrompt '(D)isplay Race Info;(A)ny key to continue;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo a
+ (( INV_ALMANAC ))
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ local ACTION=m
+ case "$ACTION" in
+ MapNav m
+ local DEST
+ read -r MAP_X MAP_Y
++ GPStoXY C5
++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
+ case "$1" in
+ GX_Map
+ local ITEM2C_Y=0 ITEM2C_X=0
+ HaveItem 0
+ (( CHAR_ITEMS > 0 ))
+ return 0
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ read -r ITEM2C_X ITEM2C_Y
++ GPStoXY H9
++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
+ clear
++ printf %s '\033[0;39m'
++ printf %s '\033[1;33m~\033[0;39m'
++ printf %s '\033[1;33mo\033[0;39m'
+ awk 'BEGIN { FS = "   " ; OFS = "   "; }
    { # place "o" (player) on map
      if (NR == 7) {  # lazy fix for ASCII borders
         if (3 == 18 ) { $4="o ("; }
         else                 { $4="o";   }
         }
      # if player has Gift-Of-Sight and not all items are found
      if ( 1 > 0 && 1 < 8) {
         # place ITEM2C on map
         # ITEM2C_Y+2 and ITEM2C_X+1 - fix for boards
 	 if (NR == 11) {
            if ( 8 == 18 ) { $9="~ ("; }
            else                     { $9="~";   }
            }
         }
      # All color on map sets here
      if (1 == 1 ) {
         # Terminal color scheme bugfix
         if ( NR == 1 ) { gsub(/^/, "\033[0;39m"); }
         # colorise "o" (player) and "~" (ITEM2C)
	 if ( NR > 2 && NR < 19 ) {
 	    gsub(/~/, "\033[1;33m~\033[0;39m")
	    gsub(/o/, "\033[1;33mo\033[0;39m")
	    }
         }
      print; }'
+ echo -e ' \033[1;33mo Tristan\033[0;39m is currently in C5 (Road)\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n ' I want to go  (W) North  (A) West  (S)outh  (D) East  (Q)uit :  '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo d
+ DEST=d
+ case "$DEST" in
+ echo -n 'You go East'
+ (( MAP_X != 18 ))
+ (( MAP_X++ ))
++ XYtoGPS 4 5
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=D5
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=201
++ bc
+ MONTH=6
++ bc
+ DAY=21
++ bc
+ WEEKDAY=1
++ bc
+ MOON=0
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 22
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ echo 22nd
++ return 0
++ MonthString 7
++ echo Merentimes
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='22nd of Merentimes in the 16th Cycle'
+ CheckForItem D5
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ CheckHotzones D5
++ grep -E '(^| )D5( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario D5
++ read -r MAP_X MAP_Y
+++ GPStoXY D5
+++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
++ awk '{ if ( NR == 7) { print $6; }}'
+ SCENARIO=.
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight .
+ local CHANCE
+ [[ ! -n '' ]]
+ case "$1" in
+ CHANCE=20
+ RollDice 100
+ DICE_SIZE=100
+ DICE=46
+ RollForEvent 20 event
+ ((  DICE <= 20  ))
+ Echo '\e[1K\e[80DRolling for event:' '[D100 46 > 20]'
+ echo -en '\e[1K\e[80DRolling for event:'
++ Strlen '[D100 46 > 20]'
++ awk '{ print length($0); }'
+ tput hpa 64
+ echo -en '[D100 46 > 20]'
+ echo
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ return 1
+ return 0
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=4.75
+ Echo 'You eat from your stock: 4.75 remaining ..' '[-.25 FOOD]'
+ echo -en 'You eat from your stock: 4.75 remaining ..'
++ Strlen '[-.25 FOOD]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-.25 FOOD]'
+ echo
+ (( STARVATION ))
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
+ return 0
+ true
+ GX_Place .
+ clear
+ case "$1" in
+ PLACE=Road
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '        (C)haracter        (R)est        (M)ap and Travel        (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ local ACTION=m
+ case "$ACTION" in
+ MapNav m
+ local DEST
+ read -r MAP_X MAP_Y
++ GPStoXY D5
++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
+ case "$1" in
+ GX_Map
+ local ITEM2C_Y=0 ITEM2C_X=0
+ HaveItem 0
+ (( CHAR_ITEMS > 0 ))
+ return 0
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ read -r ITEM2C_X ITEM2C_Y
++ GPStoXY H9
++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
+ clear
++ printf %s '\033[0;39m'
++ printf %s '\033[1;33m~\033[0;39m'
++ printf %s '\033[1;33mo\033[0;39m'
+ awk 'BEGIN { FS = "   " ; OFS = "   "; }
    { # place "o" (player) on map
      if (NR == 7) {  # lazy fix for ASCII borders
         if (4 == 18 ) { $5="o ("; }
         else                 { $5="o";   }
         }
      # if player has Gift-Of-Sight and not all items are found
      if ( 1 > 0 && 1 < 8) {
         # place ITEM2C on map
         # ITEM2C_Y+2 and ITEM2C_X+1 - fix for boards
 	 if (NR == 11) {
            if ( 8 == 18 ) { $9="~ ("; }
            else                     { $9="~";   }
            }
         }
      # All color on map sets here
      if (1 == 1 ) {
         # Terminal color scheme bugfix
         if ( NR == 1 ) { gsub(/^/, "\033[0;39m"); }
         # colorise "o" (player) and "~" (ITEM2C)
	 if ( NR > 2 && NR < 19 ) {
 	    gsub(/~/, "\033[1;33m~\033[0;39m")
	    gsub(/o/, "\033[1;33mo\033[0;39m")
	    }
         }
      print; }'
+ echo -e ' \033[1;33mo Tristan\033[0;39m is currently in D5 (Road)\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ echo -n ' I want to go  (W) North  (A) West  (S)outh  (D) East  (Q)uit :  '
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo d
+ DEST=d
+ case "$DEST" in
+ echo -n 'You go East'
+ (( MAP_X != 18 ))
+ (( MAP_X++ ))
++ XYtoGPS 5 5
++ awk '{ print substr("ABCDEFGHIJKLMNOPQR", $1, 1) $2; }'
+ CHAR_GPS=E5
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ break
+ true
+ NewTurn
+ (( TURN++ ))
+ DateFromTurn
++ bc
+ YEAR=15
++ bc
+ CENTURY=200
+ (( YEAR >= 100 ))
++ bc
+ local REMAINDER=202
++ bc
+ MONTH=6
++ bc
+ DAY=22
++ bc
+ WEEKDAY=2
++ bc
+ MOON=0
+ (( DAY++ ))
+ (( MONTH++ ))
+ (( YEAR++ ))
++ Ordial 23
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ echo 23rd
++ return 0
++ MonthString 7
++ echo Merentimes
++ Ordial 16
++ grep -Eq '^([0-9]*[^1])?1$'
++ grep -Eq '^([0-9]*[^1])?2$'
++ grep -Eq '^([0-9]*[^1])?3$'
++ grep -Eq '^[0-9]+$'
++ echo 16th
++ return 0
+ BIAMIN_DATE_STR='23rd of Merentimes in the 16th Cycle'
+ CheckForItem E5
+ (( CHAR_ITEMS < MAX_ITEMS ))
+ CheckHotzones E5
++ grep -E '(^| )E5( |$)'
+ [[ -n '' ]]
+ return 1
++ NewSector_GetScenario E5
++ read -r MAP_X MAP_Y
+++ GPStoXY E5
+++ awk '{ print index("ABCDEFGHIJKLMNOPQR", substr($0, 1 ,1));
           print substr($0, 2); }'
++ awk '{ if ( NR == 7) { print $7; }}'
+ SCENARIO=T
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ [[ -n '' ]]
+ CheckForFight T
+ local CHANCE
+ [[ ! -n '' ]]
+ case "$1" in
+ CHANCE=15
+ RollDice 100
+ DICE_SIZE=100
+ DICE=41
+ RollForEvent 15 event
+ ((  DICE <= 15  ))
+ Echo '\e[1K\e[80DRolling for event:' '[D100 41 > 15]'
+ echo -en '\e[1K\e[80DRolling for event:'
++ Strlen '[D100 41 > 15]'
++ awk '{ print length($0); }'
+ tput hpa 64
+ echo -en '[D100 41 > 15]'
+ echo
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ return 1
+ return 0
+ CheckForStarvation
++ bc
+ ((  1  ))
++ bc
+ CHAR_FOOD=4.50
+ Echo 'You eat from your stock: 4.50 remaining ..' '[-.25 FOOD]'
+ echo -en 'You eat from your stock: 4.50 remaining ..'
++ Strlen '[-.25 FOOD]'
++ awk '{ print length($0); }'
+ tput hpa 67
+ echo -en '[-.25 FOOD]'
+ echo
+ (( STARVATION ))
+ Sleep 1.5
+ read -s -n 1 -t 1.5
+ CheckForWorldChangeEconomy
+ ((  --WORLDCHANGE_COUNTDOWN > 0  ))
+ return 0
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter    (R)est    (G)o into Town    (M)ap and Travel    (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo g
+ local ACTION=g
+ case "$ACTION" in
+ [[ T == \T ]]
+ GoIntoTown
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo b
+ GX_Bulletin 4
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_GOLD_STR=1.00
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_TOBACCO_STR=1.00
+ case $1 in
+ BULLETIN=("     ROYALE IMPORT OF TOBACCOS      " "Facing a National Tobacco Famine ye " "King orders large-scale Leaf Import " "to satisfy His subjects. Several    " "Honorable Traders have volunteered  " "to Aide in the Import of Tobacco    ")
+ local BULLETIN
+ case $1 in
+ BULLETIN[6]='TOBACCO LOWERED TO: 1.00'
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ local NUM=0
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 3 21 '     ROYALE IMPORT OF TOBACCOS      '
+ tput cup 3 21
+ printf %s '     ROYALE IMPORT OF TOBACCOS      '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 5 21 'Facing a National Tobacco Famine ye '
+ tput cup 5 21
+ printf %s 'Facing a National Tobacco Famine ye '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 6 21 'King orders large-scale Leaf Import '
+ tput cup 6 21
+ printf %s 'King orders large-scale Leaf Import '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 7 21 'to satisfy His subjects. Several    '
+ tput cup 7 21
+ printf %s 'to satisfy His subjects. Several    '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 8 21 'Honorable Traders have volunteered  '
+ tput cup 8 21
+ printf %s 'Honorable Traders have volunteered  '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 9 21 'to Aide in the Import of Tobacco    '
+ tput cup 9 21
+ printf %s 'to Aide in the Import of Tobacco    '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 10 21 'TOBACCO LOWERED TO: 1.00'
+ tput cup 10 21
+ printf %s 'TOBACCO LOWERED TO: 1.00'
+ tput rc
+ PressAnyKey
+ [[ -n '' ]]
+ MakePrompt 'Press (A)ny key to continue..'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -s -t 0.01 -n 512
+ read -sn 1
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ Marketplace
+ '[' -z '' ']'
+ TOWN_GPS=E5
+ RollDice 10
+ DICE_SIZE=10
+ DICE=7
+ ((  DICE <= 4  ))
+ local BEGGAR=0
+ true
+ GX_Marketplace
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(G)rocer;(M)erchant;(L)eave;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo m
+ Marketplace_Merchant
+ '[' -z '' ']'
+ MERCHANT=E5
++ bc
+ PRICE_IxG=2.00
++ bc
+ PRICE_GxI=2.00
+ RollDice 3
+ DICE_SIZE=3
+ DICE=3
++ bc
+ local MERCHANT_MARGIN=.45
+ RollDice 3
+ DICE_SIZE=3
+ DICE=2
+ local MERCHANT_PRICE_TEST=0
+ ((  MERCHANT_PRICE_TEST != 12  ))
+ PLAYER_BUYS_FxG=1.00
+ PLAYER_SELL_FxG=1.00
+ PLAYER_BUYS_GxF=1.00
+ PLAYER_SELL_GxF=1.00
+ PLAYER_BUYS_FxT=1.00
+ PLAYER_SELL_FxT=1.00
+ PLAYER_BUYS_TxF=1.00
+ PLAYER_SELL_TxF=1.00
+ PLAYER_BUYS_GxT=1.00
+ PLAYER_SELL_GxT=1.00
+ PLAYER_BUYS_TxG=1.00
+ PLAYER_SELL_TxG=1.00
+ PLAYER_BUYS_GxI=2.00
+ PLAYER_SELL_GxI=2.00
+ PLAYER_BUYS_IxG=2.00
+ PLAYER_SELL_IxG=2.00
+ echo '        DEBUG       Default buy and sell prices:'
+ echo '        DEBUG       PLAYER_BUYS_FxG: 1.00'
+ echo '        DEBUG       PLAYER_SELL_FxG: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_GxF: 1.00'
+ echo '        DEBUG       PLAYER_SELL_GxF: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_FxT: 1.00'
+ echo '        DEBUG       PLAYER_SELL_FxT: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_TxF: 1.00'
+ echo '        DEBUG       PLAYER_SELL_TxF: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_TxG: 1.00'
+ echo '        DEBUG       PLAYER_SELL_TxG: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_GxT: 1.00'
+ echo '        DEBUG       PLAYER_SELL_GxT: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_IxG: 2.00'
+ echo '        DEBUG       PLAYER_SELL_IxG: 2.00'
+ echo '        DEBUG       PLAYER_BUYS_GxI: 2.00'
+ echo '        DEBUG       PLAYER_SELL_GxI: 2.00'
+ case "$DICE" in
++ bc
+ PLAYER_BUYS_TxG=1.45
++ bc
+ PLAYER_SELL_TxG=.55
++ bc
+ PLAYER_BUYS_GxT=1.45
++ bc
+ PLAYER_SELL_GxT=.55
++ bc
+ PLAYER_BUYS_TxF=1.45
++ bc
+ PLAYER_SELL_TxF=.55
++ bc
+ PLAYER_BUYS_FxT=1.45
++ bc
+ PLAYER_SELL_FxT=.55
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
++ bc
+ ((  1 == 1  ))
+ ((  MERCHANT_PRICE_TEST++  ))
+ echo '        DEBUG       MERCHANT_WANTS: 2 (1 = Food, 2 = Tobacco, 3 = Gold) '
+ ((  MERCHANT_PRICE_TEST == 12  ))
+ echo '        DEBUG       PRICES OK'
+ ((  MERCHANT_PRICE_TEST != 12  ))
+ echo '        DEBUG       Summary AFTER price calculations: MERCHANT_WANTS="2" (1 = Food, 2 = Tobacco, 3 = Gold)'
+ echo '        DEBUG       PLAYER_BUYS_FxG: 1.00'
+ echo '        DEBUG       PLAYER_SELL_FxG: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_GxF: 1.00'
+ echo '        DEBUG       PLAYER_SELL_GxF: 1.00'
+ echo '        DEBUG       PLAYER_BUYS_FxT: 1.45'
+ echo '        DEBUG       PLAYER_SELL_FxT: .55'
+ echo '        DEBUG       PLAYER_BUYS_TxF: 1.45'
+ echo '        DEBUG       PLAYER_SELL_TxF: .55'
+ echo '        DEBUG       PLAYER_BUYS_TxG: 1.45'
+ echo '        DEBUG       PLAYER_SELL_TxG: .55'
+ echo '        DEBUG       PLAYER_BUYS_GxT: 1.45'
+ echo '        DEBUG       PLAYER_SELL_GxT: .55'
+ echo '        DEBUG       PLAYER_BUYS_IxG: 2.00'
+ echo '        DEBUG       PLAYER_SELL_IxG: 2.00'
+ echo '        DEBUG       PLAYER_BUYS_GxI: 2.00'
+ echo '        DEBUG       PLAYER_SELL_GxI: 2.00'
+ RollDice 8
+ DICE_SIZE=8
+ DICE=3
+ case "$DICE" in
+ MERCHANT_ITEM='Health Potion (15 HP)'
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining t
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=tobacco
+ MvAddStr 7 4 '1.45 Gold or 1.45 Food.'
+ tput cup 7 4
+ printf %s '1.45 Gold or 1.45 Food.'
+ MvAddStr 10 4 'for .55 Gold or .55 Food each!'
+ tput cup 10 4
+ printf %s 'for .55 Gold or .55 Food each!'
+ MERCHANDISE=Tobacco
+ [[ Tobacco = \I\t\e\m ]]
+ [[ Tobacco = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Tobacco to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Tobacco to you for'
+ MvAddStr 9 4 'Or I can buy 1 Tobacco from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Tobacco from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Tobacco
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=tobacco
+ MvAddStr 7 4 '1.45 Gold or 1.45 Food.'
+ tput cup 7 4
+ printf %s '1.45 Gold or 1.45 Food.'
+ MvAddStr 10 4 'for .55 Gold or .55 Food each!'
+ tput cup 10 4
+ printf %s 'for .55 Gold or .55 Food each!'
+ MERCHANDISE=Tobacco
+ [[ Tobacco = \I\t\e\m ]]
+ [[ Tobacco = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Tobacco to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Tobacco to you for'
+ MvAddStr 9 4 'Or I can buy 1 Tobacco from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Tobacco from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining f
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '1.00 Gold or 1.45 Tobacco.'
+ tput cup 7 4
+ printf %s '1.00 Gold or 1.45 Tobacco.'
+ MvAddStr 10 4 'for 1.00 Gold or .55 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Gold or .55 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Food
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '1.00 Gold or 1.45 Tobacco.'
+ tput cup 7 4
+ printf %s '1.00 Gold or 1.45 Tobacco.'
+ MvAddStr 10 4 'for 1.00 Gold or .55 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Gold or .55 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining f
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '1.00 Gold or 1.45 Tobacco.'
+ tput cup 7 4
+ printf %s '1.00 Gold or 1.45 Tobacco.'
+ MvAddStr 10 4 'for 1.00 Gold or .55 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Gold or .55 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Food
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=food
+ MvAddStr 7 4 '1.00 Gold or 1.45 Tobacco.'
+ tput cup 7 4
+ printf %s '1.00 Gold or 1.45 Tobacco.'
+ MvAddStr 10 4 'for 1.00 Gold or .55 Tobacco each!'
+ tput cup 10 4
+ printf %s 'for 1.00 Gold or .55 Tobacco each!'
+ MERCHANDISE=Food
+ [[ Food = \I\t\e\m ]]
+ [[ Food = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Food to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Food to you for'
+ MvAddStr 9 4 'Or I can buy 1 Food from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Food from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining t
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=tobacco
+ MvAddStr 7 4 '1.45 Gold or 1.45 Food.'
+ tput cup 7 4
+ printf %s '1.45 Gold or 1.45 Food.'
+ MvAddStr 10 4 'for .55 Gold or .55 Food each!'
+ tput cup 10 4
+ printf %s 'for .55 Gold or .55 Food each!'
+ MERCHANDISE=Tobacco
+ [[ Tobacco = \I\t\e\m ]]
+ [[ Tobacco = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Tobacco to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Tobacco to you for'
+ MvAddStr 9 4 'Or I can buy 1 Tobacco from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Tobacco from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Tobacco
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=tobacco
+ MvAddStr 7 4 '1.45 Gold or 1.45 Food.'
+ tput cup 7 4
+ printf %s '1.45 Gold or 1.45 Food.'
+ MvAddStr 10 4 'for .55 Gold or .55 Food each!'
+ tput cup 10 4
+ printf %s 'for .55 Gold or .55 Food each!'
+ MERCHANDISE=Tobacco
+ [[ Tobacco = \I\t\e\m ]]
+ [[ Tobacco = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Tobacco to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Tobacco to you for'
+ MvAddStr 9 4 'Or I can buy 1 Tobacco from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Tobacco from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining g
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=gold
+ MvAddStr 7 4 '1.45 Tobacco or 1.00 Food.'
+ tput cup 7 4
+ printf %s '1.45 Tobacco or 1.00 Food.'
+ MvAddStr 10 4 'for .55 Tobacco or 1.00 Food each!'
+ tput cup 10 4
+ printf %s 'for .55 Tobacco or 1.00 Food each!'
+ MERCHANDISE=Gold
+ [[ Gold = \I\t\e\m ]]
+ [[ Gold = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Gold to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Gold to you for'
+ MvAddStr 9 4 'Or I can buy 1 Gold from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Gold from you,'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Gold
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=gold
+ MvAddStr 7 4 '1.45 Tobacco or 1.00 Food.'
+ tput cup 7 4
+ printf %s '1.45 Tobacco or 1.00 Food.'
+ MvAddStr 10 4 'for .55 Tobacco or 1.00 Food each!'
+ tput cup 10 4
+ printf %s 'for .55 Tobacco or 1.00 Food each!'
+ MERCHANDISE=Gold
+ [[ Gold = \I\t\e\m ]]
+ [[ Gold = \u\n\k\n\o\w\n ]]
+ MvAddStr 4 4 'But of course! Here are my prices:'
+ tput cup 4 4
+ printf %s 'But of course! Here are my prices:'
+ MvAddStr 6 4 'I sell 1 Gold to you for'
+ tput cup 6 4
+ printf %s 'I sell 1 Gold to you for'
+ MvAddStr 9 4 'Or I can buy 1 Gold from you,'
+ tput cup 9 4
+ printf %s 'Or I can buy 1 Gold from you,'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ Marketplace_Merchant_Bargaining i
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=item
+ MvAddStr 7 4 'yours for 2.00 Gold!'
+ tput cup 7 4
+ printf %s 'yours for 2.00 Gold!'
+ MERCHANDISE=Item
+ [[ Item = \I\t\e\m ]]
+ MvAddStr 4 4 'You are in for a treat! I managed to'
+ tput cup 4 4
+ printf %s 'You are in for a treat! I managed to'
+ MvAddStr 5 4 'acquire a very rare and valuable'
+ tput cup 5 4
+ printf %s 'acquire a very rare and valuable'
+ MvAddStr 6 4 'HEALTH POTION (15 HP), it can be'
+ tput cup 6 4
+ printf %s 'HEALTH POTION (15 HP), it can be'
+ MvAddStr 9 4 'I also buy any items you sell'
+ tput cup 9 4
+ printf %s 'I also buy any items you sell'
+ MvAddStr 10 4 'for 2.00 Gold a piece.'
+ tput cup 10 4
+ printf %s 'for 2.00 Gold a piece.'
+ tput rc
+ tput sc
+ MvAddStr 12 4 'Are you buying or selling?'
+ tput cup 12 4
+ printf %s 'Are you buying or selling?'
+ tput rc
++ MakePrompt '(B)uying;(S)elling;(J)ust Looking'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '            (B)uying            (S)elling            (J)ust Looking            ' MERCHANTVAR
+ Marketplace_Merchant_Bargaining Item
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ tput sc
+ case "$1" in
+ MERCHANDISE=item
+ MvAddStr 7 4 'yours for 2.00 Gold!'
+ tput cup 7 4
+ printf %s 'yours for 2.00 Gold!'
+ MERCHANDISE=Item
+ [[ Item = \I\t\e\m ]]
+ MvAddStr 4 4 'You are in for a treat! I managed to'
+ tput cup 4 4
+ printf %s 'You are in for a treat! I managed to'
+ MvAddStr 5 4 'acquire a very rare and valuable'
+ tput cup 5 4
+ printf %s 'acquire a very rare and valuable'
+ MvAddStr 6 4 'HEALTH POTION (15 HP), it can be'
+ tput cup 6 4
+ printf %s 'HEALTH POTION (15 HP), it can be'
+ MvAddStr 9 4 'I also buy any items you sell'
+ tput cup 9 4
+ printf %s 'I also buy any items you sell'
+ MvAddStr 10 4 'for 2.00 Gold a piece.'
+ tput cup 10 4
+ printf %s 'for 2.00 Gold a piece.'
+ tput rc
+ local QUANTITY COST_GOLD COST_TOBACCO COST_FOOD COST_ITEM TRANSACTION_STATUS BARGAIN_TYPE
+ case "$MERCHANTVAR" in
+ BARGAIN_TYPE=3
+ ((  BARGAIN_TYPE != 3  ))
+ true
+ GX_Marketplace_Merchant
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ Marketplace_Statusline
+ MakePrompt 'You currently have 8 Gold, 7 Tobacco and 4.50 Food in your inventory'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ echo -e '\n'
+ local M_Y=4
+ MERCHANT_MSG=("" "weather-beaten Traveller!" "galant Elf of the Forests!" "fierce master Dwarf!" "young master Hobbit!")
+ local MERCHANT_MSG
+ tput sc
+ MvAddStr 4 4 'Oye there, weather-beaten Traveller!'
+ tput cup 4 4
+ printf %s 'Oye there, weather-beaten Traveller!'
+ ((  M_Y++  ))
+ MERCHANT_MSG=("" "" "" "" "" "" "Me and my Caravan travel far and wide" "to provide the Finest Merchandise" "in the Realm, and at the best" "possible prices! I buy everything" "and sell only the best, 'tis true!" "" "What are you looking for?")
+ local MERCHANT_MSG
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 6 4 'Me and my Caravan travel far and wide'
+ tput cup 6 4
+ printf %s 'Me and my Caravan travel far and wide'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 7 4 'to provide the Finest Merchandise'
+ tput cup 7 4
+ printf %s 'to provide the Finest Merchandise'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 8 4 'in the Realm, and at the best'
+ tput cup 8 4
+ printf %s 'in the Realm, and at the best'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 9 4 'possible prices! I buy everything'
+ tput cup 9 4
+ printf %s 'possible prices! I buy everything'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 10 4 'and sell only the best, '\''tis true!'
+ tput cup 10 4
+ printf %s 'and sell only the best, '\''tis true!'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 11 4 ''
+ tput cup 11 4
+ printf %s ''
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ MvAddStr 12 4 'What are you looking for?'
+ tput cup 12 4
+ printf %s 'What are you looking for?'
+ ((  M_Y++  ))
+ ((  M_Y <= 12  ))
+ tput rc
++ MakePrompt '(F)ood;(T)obacco;(G)old;(I)tems;(L)eave'
++ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -sn 1 -p '        (F)ood       (T)obacco       (G)old       (I)tems       (L)eave        ' MERCHANTVAR
+ case "$MERCHANTVAR" in
+ break
+ true
+ GX_Marketplace
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(G)rocer;(M)erchant;(L)eave;(Q)uit'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo l
+ break
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo b
+ GX_Bulletin 4
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_GOLD_STR=1.00
++ awk '{ printf "%4.2f", $0 }'
+ local VAL_TOBACCO_STR=1.00
+ case $1 in
+ BULLETIN=("     ROYALE IMPORT OF TOBACCOS      " "Facing a National Tobacco Famine ye " "King orders large-scale Leaf Import " "to satisfy His subjects. Several    " "Honorable Traders have volunteered  " "to Aide in the Import of Tobacco    ")
+ local BULLETIN
+ case $1 in
+ BULLETIN[6]='TOBACCO LOWERED TO: 1.00'
+ clear
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ tput sc
+ local NUM=0
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 3 21 '     ROYALE IMPORT OF TOBACCOS      '
+ tput cup 3 21
+ printf %s '     ROYALE IMPORT OF TOBACCOS      '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 5 21 'Facing a National Tobacco Famine ye '
+ tput cup 5 21
+ printf %s 'Facing a National Tobacco Famine ye '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 6 21 'King orders large-scale Leaf Import '
+ tput cup 6 21
+ printf %s 'King orders large-scale Leaf Import '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 7 21 'to satisfy His subjects. Several    '
+ tput cup 7 21
+ printf %s 'to satisfy His subjects. Several    '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 8 21 'Honorable Traders have volunteered  '
+ tput cup 8 21
+ printf %s 'Honorable Traders have volunteered  '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 9 21 'to Aide in the Import of Tobacco    '
+ tput cup 9 21
+ printf %s 'to Aide in the Import of Tobacco    '
+ for i in 3 5 6 7 8 9 10
+ MvAddStr 10 21 'TOBACCO LOWERED TO: 1.00'
+ tput cup 10 21
+ printf %s 'TOBACCO LOWERED TO: 1.00'
+ tput rc
+ PressAnyKey
+ [[ -n '' ]]
+ MakePrompt 'Press (A)ny key to continue..'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ read -s -t 0.01 -n 512
+ read -sn 1
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ MakePrompt '(T)avern;(B)ulletin Board;(M)arketplace;(E)xit Town'
+ awk '   BEGIN { FS =";" }
        {   MAXLEN = 79;
            COUNT = NF;
            for ( i=1; i<= NF; i++ ) { STRLEN += length($i); }
            if ( STRLEN > MAXLEN ) { exit 1 ; }
            SPACES = MAXLEN - STRLEN;
            REMAINDER = SPACES % (NF + 1 ) ;
            SPACER = (SPACES - REMAINDER ) / (NF + 1) ;
            if ( REMAINDER % 2  == 1 ) { REMAINDER -= 1 ; }
            SPACES_IN = REMAINDER / 2 ;
            while (SPACES_IN-- > 0 ) { INTRO = INTRO " "; }
            while (SPACER-- > 0 ) { SEPARATOR = SEPARATOR " " }
            STR = INTRO;
            for ( i=1; i<=NF; i++ ) { STR = STR SEPARATOR $i; }
            STR = STR SEPARATOR INTRO }
            END { printf STR; }'
+ case $(Read) in
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo e
+ break
+ true
+ GX_Place T
+ clear
+ case "$1" in
+ PLACE=Town
+ cat
+ echo '- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ case "$SCENARIO" in
+ echo -n '     (C)haracter    (R)est    (G)o into Town    (M)ap and Travel    (Q)uit'
++ Read
++ read -s -t 0.01 -n 512
++ read -s -n 1
++ echo q
+ local ACTION=q
+ case "$ACTION" in
+ CleanUp
+ GX_BiaminTitle
+ clear
+ cat
+ echo -e '\n- ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ - ~ '
+ (( FIGHTMODE ))
+ [[ -n Tristan ]]
+ SaveCurrentSheet
+ echo 'VERSION: 1.9
CHARACTER: Tristan
RACE: 1
BATTLES: 0
EXPERIENCE: 0
LOCATION: E5
HEALTH: 100
ITEMS: 1
KILLS: 0
HOME: C2
GOLD: 8
TOBACCO: 7
FOOD: 4.50
BBSMSG: 4
VAL_GOLD: 1
VAL_TOBACCO: 1
VAL_CHANGE: 0.15
STARVATION: 0
TURN: 5602
INV_ALMANAC: 0'
+ echo -e '\nLeaving the realm of magic behind ....\nPlease submit bugs and feedback at <http://sigg3.net/biamin/>'
+ Exit 0
+ tput cnorm
+ [[ -n 0 ]]
+ exit 0
